var beepbox;!function(t){class e{}function n(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];const n=e/t.length;let s=0,i=0;for(let e=0;e<t.length;e++)s+=i,i=t[e]-n,t[e]=s;return t.push(0),new Float64Array(t)}function s(t){let e=0,n=0;for(let s=0;s<t.length;s++)e+=t[s],n+=Math.abs(t[s]);const s=e/t.length,i=n/t.length;let a=0,o=0;for(let e=0;e<t.length;e++)a+=o,o=(t[e]-s)/i,t[e]=a;return t.push(0),new Float64Array(t)}function i(n){let s=e.chipNoises[n].samples;if(null==s){if(s=new Float32Array(e.chipNoiseLength+1),e.chipNoises[n].samples=s,0==n){let t=1;for(let n=0;n<e.chipNoiseLength;n++){s[n]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=16384),t=e}}else if(1==n)for(let t=0;t<e.chipNoiseLength;t++)s[t]=2*Math.random()-1;else if(2==n){let t=1;for(let n=0;n<e.chipNoiseLength;n++){s[n]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=32768),t=e}}else if(3==n){let t=1;for(let n=0;n<e.chipNoiseLength;n++){s[n]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=40),t=e}}else if(4==n)a(s,10,11,1,1,0),a(s,11,14,.6578,.6578,0),t.inverseRealFourierTransform(s,e.chipNoiseLength),t.scaleElementsByFactor(s,1/Math.sqrt(e.chipNoiseLength));else if(5==n)for(var i=1,o=0;o<e.chipNoiseLength;o++){s[o]=2*(1&i)-1,1==(i+(r=i>>1)&1)&&(r+=40),i=r}else if(6==n)a(s,1,10,1,1,0),a(s,20,14,-2,-2,0),t.inverseRealFourierTransform(s,e.chipNoiseLength),t.scaleElementsByFactor(s,1/Math.sqrt(e.chipNoiseLength));else if(7==n)for(i=1,o=0;o<e.chipNoiseLength;o++){s[o]=4*(1&i)*(14*Math.random()+1),1==(i+(r=i>>1)&1)&&(r+=60),i=r}else{if(8!=n)throw new Error("Unrecognized drum index: "+n);for(i=1,o=0;o<32768;o++){var r;s[o]=(1&i)/2+.5,1==(i+(r=i>>1)&1)&&(r-=40),i=r}}s[e.chipNoiseLength]=s[0]}return s}function a(t,n,s,a,o,r){const h=0|Math.pow(2,n),l=Math.min(e.chipNoiseLength>>1,0|Math.pow(2,s)),c=i(0);let m=0;for(let i=h;i<l;i++){let h=a+(o-a)*(Math.log(i)/Math.LN2-n)/(s-n),l=Math.pow(2,(h-1)*e.spectrumMax+1)*h;m+=l*=Math.pow(i/2048,r),l*=c[i];const d=.61803398875*i*i*Math.PI*2;t[i]=Math.cos(d)*l,t[e.chipNoiseLength-i]=Math.sin(d)*l}return m}function o(t){const e={};for(let n=0;n<t.length;n++){const s=t[n];s.index=n,e[s.name]=s}const n=t;return n.dictionary=e,n}e.thresholdVal=-10,e.kneeVal=40,e.ratioVal=12,e.attackVal=0,e.releaseVal=.25,e.versionDisplayName="BluBox BETA",e.scales=o([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]}]),e.keys=o([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),e.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],e.tempoMin=30,e.tempoMax=320,e.reverbRange=32,e.beatsPerBarMin=3,e.beatsPerBarMax=16,e.barCountMin=1,e.barCountMax=256,e.instrumentsPerChannelMin=1,e.instrumentsPerChannelMax=10,e.partsPerBeat=24,e.ticksPerPart=2,e.rhythms=o([{name:"÷3 (triplets)",stepsPerBeat:3,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1],[0,1,2,3]],roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1],[0,1,2,3]],roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,1],[0,1,2,1],[0,1,2,3]],roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1],[0,1,2,3]],roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1],[0,1,2,3]],roundUpThresholds:null}]),e.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","custom chip","mod"],e.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!0],e.chipWaves=o([{name:"rounded",volume:.94,samples:n([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",volume:1,samples:n([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",volume:.5,samples:n([1,-1])},{name:"1/4 pulse",volume:.5,samples:n([1,-1,-1,-1])},{name:"1/8 pulse",volume:.5,samples:n([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",volume:.65,samples:n([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",volume:.5,samples:n([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",volume:.4,samples:n([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",volume:.4,samples:n([1,-1,1,-1,1,0])},{name:"sine",volume:.88,samples:s([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",volume:.8,samples:s([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",volume:.8,samples:s([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",volume:.38,samples:s([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",volume:.45,samples:s([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",volume:.3,samples:s([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",volume:.35,samples:s([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",volume:.22,samples:s([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",volume:.2,samples:s([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",volume:.2,samples:s([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",volume:.35,samples:s([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])}]),e.chipNoises=o([{name:"retro",volume:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",volume:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",volume:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",volume:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",volume:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",volume:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",volume:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",volume:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",volume:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null}]),e.filterCutoffMaxHz=8e3,e.filterCutoffMinHz=1,e.filterMax=.95,e.filterMaxResonance=.95,e.filterCutoffRange=11,e.filterResonanceRange=8,e.transitions=o([{name:"seamless",isSeamless:!0,attackSeconds:0,releases:!1,releaseTicks:1,slides:!1,slideTicks:3},{name:"hard",isSeamless:!1,attackSeconds:0,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"soft",isSeamless:!1,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"slide",isSeamless:!0,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!0,slideTicks:3},{name:"cross fade",isSeamless:!1,attackSeconds:.04,releases:!0,releaseTicks:6,slides:!1,slideTicks:3},{name:"hard fade",isSeamless:!1,attackSeconds:0,releases:!0,releaseTicks:48,slides:!1,slideTicks:3},{name:"medium fade",isSeamless:!1,attackSeconds:.0125,releases:!0,releaseTicks:72,slides:!1,slideTicks:3},{name:"soft fade",isSeamless:!1,attackSeconds:.06,releases:!0,releaseTicks:96,slides:!1,slideTicks:6}]),e.vibratos=o([{name:"none",amplitude:0,periodsSeconds:[.14],delayParts:0},{name:"light",amplitude:.15,periodsSeconds:[.14],delayParts:0},{name:"delayed",amplitude:.3,periodsSeconds:[.14],delayParts:18},{name:"heavy",amplitude:.45,periodsSeconds:[.14],delayParts:0},{name:"shaky",amplitude:.1,periodsSeconds:[.11,.17798,.33],delayParts:0}]),e.intervals=o([{name:"union",spread:0,offset:0,volume:.7,sign:1},{name:"shimmer",spread:.018,offset:0,volume:.8,sign:1},{name:"hum",spread:.045,offset:0,volume:1,sign:1},{name:"honky tonk",spread:.09,offset:0,volume:1,sign:1},{name:"dissonant",spread:.25,offset:0,volume:.9,sign:1},{name:"fifth",spread:3.5,offset:3.5,volume:.9,sign:1},{name:"octave",spread:6,offset:6,volume:.8,sign:1},{name:"bowed",spread:.02,offset:0,volume:1,sign:-1},{name:"piano",spread:.01,offset:0,volume:1,sign:.7}]),e.effectsNames=["none","reverb","chorus","chorus & reverb"],e.volumeRange=50,e.volumeLogScale=.1428,e.panCenter=50,e.panMax=2*e.panCenter,e.detuneMin=-50,e.detuneMax=50,e.songDetuneMin=-250,e.songDetuneMax=250,e.chords=o([{name:"harmony",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:0},{name:"strum",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:1},{name:"arpeggio",harmonizes:!1,customInterval:!1,arpeggiates:!0,isCustomInterval:!1,strumParts:0},{name:"custom interval",harmonizes:!0,customInterval:!0,arpeggiates:!0,isCustomInterval:!0,strumParts:0}]),e.maxChordSize=4,e.operatorCount=4,e.algorithms=o([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]}]),e.operatorCarrierInterval=[0,.04,-.073,.091],e.operatorAmplitudeMax=15,e.operatorFrequencies=o([{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1}]),e.envelopes=o([{name:"custom",type:0,speed:0},{name:"steady",type:1,speed:0},{name:"punch",type:2,speed:0},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4}]),e.feedbacks=o([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]}]),e.chipNoiseLength=32768,e.spectrumBasePitch=24,e.spectrumControlPoints=30,e.spectrumControlPointsPerOctave=7,e.spectrumControlPointBits=3,e.spectrumMax=(1<<e.spectrumControlPointBits)-1,e.harmonicsControlPoints=28,e.harmonicsRendered=64,e.harmonicsControlPointBits=3,e.harmonicsMax=(1<<e.harmonicsControlPointBits)-1,e.harmonicsWavelength=2048,e.pulseWidthRange=50,e.pitchChannelCountMin=1,e.pitchChannelCountMax=40,e.noiseChannelCountMin=0,e.noiseChannelCountMax=8,e.modChannelCountMin=0,e.modChannelCountMax=8,e.noiseInterval=6,e.pitchesPerOctave=12,e.drumCount=12,e.modCount=6,e.pitchOctaves=8,e.maxScrollableOctaves=5,e.maxPitch=e.pitchOctaves*e.pitchesPerOctave,e.maximumTonesPerChannel=2*e.maxChordSize,e.sineWaveLength=256,e.sineWaveMask=e.sineWaveLength-1,e.sineWave=function(){const t=new Float64Array(e.sineWaveLength+1);for(let n=0;n<e.sineWaveLength+1;n++)t[n]=Math.sin(n*Math.PI*2/e.sineWaveLength);return t}(),e.barEditorHeight=10,t.Config=e,t.getDrumWave=i,t.drawNoiseSpectrum=a,t.getArpeggioPitchIndex=function(t,n,s){const i=e.rhythms[n].arpeggioPatterns[t-1];return null!=i?i[s%i.length]:s%t},t.toNameMap=o}(beepbox||(beepbox={})),function(t){const e={class:!0,classList:!0,className:!0};function n(t,s){for(const i of s)if(Array.isArray(i))n(t,i);else if(i instanceof Node)t.appendChild(i);else if(i&&i.constructor===Object)for(const n of Object.keys(i)){const s=i[n];if(e[n])if("classList"===n){const e=Array.isArray(s)?s:s.split(" ");for(const n of e)t.classList.add(n)}else t.setAttribute("class",Array.isArray(s)?s.join(" "):s);else if("style"===n)if(s&&s.constructor===Object)for(const e of Object.keys(s))e.startsWith("--")?t.style.setProperty(e,s[e]):t.style.hasOwnProperty(e)?t.style[e]=s[e]:console.log("Unrecognized style property name: "+e);else t.setAttribute(n,s);else"function"==typeof s?t[n]=s:"boolean"==typeof s?s?t.setAttribute(n,""):t.removeAttribute(n):t.setAttribute(n,s)}else t.appendChild(document.createTextNode(i));return t}const s="http://www.w3.org/2000/svg";t.HTML=function(){},t.HTML.element=function(t,...e){return n(document.createElement(t),e)},t.SVG=function(){},t.SVG.element=function(t,...e){return n(document.createElementNS(s,t),e)};for(const e of"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" "))t.HTML[e]=function(...t){return n(document.createElement(e),t)};for(const e of"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" "))t.SVG[e]=function(...t){return n(document.createElementNS(s,e),t)};t.prettyNumber=function(t){return t.toFixed(2).replace(/\.?0*$/,"")}}(beepbox||(beepbox={})),function(t){class e{static resetColors(){this.colorLookup.clear()}static getComputedChannelColor(t,n){if("false"==getComputedStyle(this.t).getPropertyValue("--use-color-formula").trim()){let i=e.getChannelColor(t,n);var s=/\(([^)]+)\)/;return{secondaryChannel:e.getComputed(s.exec(i.secondaryChannel)[1]),primaryChannel:e.getComputed(s.exec(i.primaryChannel)[1]),secondaryNote:e.getComputed(s.exec(i.secondaryNote)[1]),primaryNote:e.getComputed(s.exec(i.primaryNote)[1])}}return e.getChannelColor(t,n)}static getChannelColor(n,s){if("false"==getComputedStyle(this.t).getPropertyValue("--use-color-formula").trim())return s<n.pitchChannelCount?e.pitchChannels[s%e.pitchChannels.length]:s<n.pitchChannelCount+n.noiseChannelCount?e.noiseChannels[(s-n.pitchChannelCount)%e.noiseChannels.length]:e.modChannels[(s-n.pitchChannelCount-n.noiseChannelCount)%e.modChannels.length];if(e.colorLookup.has(s))return e.colorLookup.get(s);if(s<n.pitchChannelCount){const n=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-hue"),i=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-hue-scale"),a=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-sat"),o=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-sat-scale"),r=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-lum"),h=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-channel-lum-scale"),l=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-hue"),c=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-hue-scale"),m=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-sat"),d=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-sat-scale"),p=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-lum"),u=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-channel-lum-scale"),f=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-hue"),y=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-hue-scale"),b=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-sat"),g=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-sat-scale"),v=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-lum"),k=+getComputedStyle(this.t).getPropertyValue("--pitch-secondary-note-lum-scale"),w=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-hue"),M=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-hue-scale"),x=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-sat"),C=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-sat-scale"),S=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-lum"),F=+getComputedStyle(this.t).getPropertyValue("--pitch-primary-note-lum-scale");let B={secondaryChannel:"hsl("+(+n+s*+i/t.Config.pitchChannelCountMax*256)%256+","+ +a*(1-+o*Math.floor(s/7))+"%,"+ +r*(1-+h*Math.floor(s/7))+"%)",primaryChannel:"hsl("+(+l+s*+c/t.Config.pitchChannelCountMax*256)%256+","+ +m*(1-+d*Math.floor(s/7))+"%,"+ +p*(1-+u*Math.floor(s/7))+"%)",secondaryNote:"hsl("+(+f+s*+y/t.Config.pitchChannelCountMax*256)%256+","+ +b*(1-+g*Math.floor(s/7))+"%,"+ +v*(1-+k*Math.floor(s/7))+"%)",primaryNote:"hsl("+(+w+s*+M/t.Config.pitchChannelCountMax*256)%256+","+ +x*(1-+C*Math.floor(s/7))+"%,"+ +S*(1-+F*Math.floor(s/7))+"%)"};return e.colorLookup.set(s,B),B}if(s<n.pitchChannelCount+n.noiseChannelCount){const i=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-hue"),a=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-hue-scale"),o=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-sat"),r=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-sat-scale"),h=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-lum"),l=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-channel-lum-scale"),c=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-hue"),m=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-hue-scale"),d=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-sat"),p=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-sat-scale"),u=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-lum"),f=+getComputedStyle(this.t).getPropertyValue("--noise-primary-channel-lum-scale"),y=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-hue"),b=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-hue-scale"),g=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-sat"),v=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-sat-scale"),k=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-lum"),w=+getComputedStyle(this.t).getPropertyValue("--noise-secondary-note-lum-scale"),M=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-hue"),x=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-hue-scale"),C=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-sat"),S=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-sat-scale"),F=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-lum"),B=+getComputedStyle(this.t).getPropertyValue("--noise-primary-note-lum-scale");let D={secondaryChannel:"hsl("+(+i+(s-n.pitchChannelCount)*+a/t.Config.noiseChannelCountMax*256)%256+","+(+o+s*+r)+"%,"+(+h+s*+l)+"%)",primaryChannel:"hsl("+(+c+(s-n.pitchChannelCount)*+m/t.Config.noiseChannelCountMax*256)%256+","+(+d+s*+p)+"%,"+(+u+s*+f)+"%)",secondaryNote:"hsl("+(+y+(s-n.pitchChannelCount)*+b/t.Config.noiseChannelCountMax*256)%256+","+(+g+s*+v)+"%,"+(+k+s*+w)+"%)",primaryNote:"hsl("+(+M+(s-n.pitchChannelCount)*+x/t.Config.noiseChannelCountMax*256)%256+","+(+C+s*+S)+"%,"+(+F+s*+B)+"%)"};return e.colorLookup.set(s,D),D}{const i=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-hue"),a=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-hue-scale"),o=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-sat"),r=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-sat-scale"),h=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-lum"),l=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-channel-lum-scale"),c=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-hue"),m=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-hue-scale"),d=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-sat"),p=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-sat-scale"),u=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-lum"),f=+getComputedStyle(this.t).getPropertyValue("--mod-primary-channel-lum-scale"),y=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-hue"),b=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-hue-scale"),g=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-sat"),v=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-sat-scale"),k=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-lum"),w=+getComputedStyle(this.t).getPropertyValue("--mod-secondary-note-lum-scale"),M=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-hue"),x=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-hue-scale"),C=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-sat"),S=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-sat-scale"),F=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-lum"),B=+getComputedStyle(this.t).getPropertyValue("--mod-primary-note-lum-scale");let D={secondaryChannel:"hsl("+(+i+(s-n.pitchChannelCount-n.noiseChannelCount)*+a/t.Config.modChannelCountMax*256)%256+","+(+o+s*+r)+"%,"+(+h+s*+l)+"%)",primaryChannel:"hsl("+(+c+(s-n.pitchChannelCount-n.noiseChannelCount)*+m/t.Config.modChannelCountMax*256)%256+","+(+d+s*+p)+"%,"+(+u+s*+f)+"%)",secondaryNote:"hsl("+(+y+(s-n.pitchChannelCount-n.noiseChannelCount)*+b/t.Config.modChannelCountMax*256)%256+","+(+g+s*+v)+"%,"+(+k+s*+w)+"%)",primaryNote:"hsl("+(+M+(s-n.pitchChannelCount-n.noiseChannelCount)*+x/t.Config.modChannelCountMax*256)%256+","+(+C+s*+S)+"%,"+(+F+s*+B)+"%)"};return e.colorLookup.set(s,D),D}}static setTheme(t){this.t.textContent=this.themes[t];const e=document.querySelector("meta[name='theme-color']");null!=e&&e.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background")),this.resetColors()}static getComputed(t){return getComputedStyle(this.t).getPropertyValue(t)}}e.colorLookup=new Map,e.themes={"dark classic":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\n\t\t\t\t}\n\t\t\t","dark competition":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\n\t\t\t\t}\n\t\t\t","light classic":"\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #685d88;\n\t\t\t\t\t--editor-background: white;\n\t\t\t\t\t--hover-preview: black;\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t\t--primary-text: black;\n\t\t\t\t\t--secondary-text: #777;\n\t\t\t\t\t--inverted-text: white;\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t\t--loop-accent: #98f;\n\t\t\t\t\t--link-accent: #74f;\n\t\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t","jummbox classic":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t",forest:"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t",canyon:"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t","jummbox light":"\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #fefdff;\n\t\t\t\t\t--editor-background: #fefdff;\n\t\t\t\t\t--hover-preview: #302880;\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\n\t\t\t\t\t--primary-text: #401890;\n\t\t\t\t\t--secondary-text: #8769af;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\n\t\t\t\t\t--loop-accent: #4c35d4;\n\t\t\t\t\t--link-accent: #7af;\n\t\t\t\t\t--ui-widget-background: #bf9cec;\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\n\t\t\t\t\t--pitch-background: #e2d9f9;\n\t\t\t\t\t--tonic: #c288cc;\n\t\t\t\t\t--fifth-note: #d8c9fd;\n\t\t\t\t\t--white-piano-key: #e2e2ff;\n\t\t\t\t\t--black-piano-key: #66667a;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\n\t\t\t\t\t--input-box-outline: #bbb;\n\t\t\t\t\t--mute-button-normal: #e9b752;\n\t\t\t\t\t--mute-button-mod: #9558ee;\n\t\t\t\t\t--mod-label-primary: #ececff;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\n\t\t\t\t\t--mod-label-primary-text: #302880;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t"},e.pageMargin="var(--page-margin)",e.editorBackground="var(--editor-background)",e.hoverPreview="var(--hover-preview)",e.playhead="var(--playhead)",e.primaryText="var(--primary-text)",e.secondaryText="var(--secondary-text)",e.invertedText="var(--inverted-text)",e.textSelection="var(--text-selection)",e.boxSelectionFill="var(--box-selection-fill)",e.loopAccent="var(--loop-accent)",e.linkAccent="var(--link-accent)",e.uiWidgetBackground="var(--ui-widget-background)",e.uiWidgetFocus="var(--ui-widget-focus)",e.pitchBackground="var(--pitch-background)",e.tonic="var(--tonic)",e.fifthNote="var(--fifth-note)",e.whitePianoKey="var(--white-piano-key)",e.blackPianoKey="var(--black-piano-key)",e.useColorFormula="var(--use-color-formula)",e.pitchSecondaryChannelHue="var(--pitch-secondary-channel-hue)",e.pitchSecondaryChannelHueScale="var(--pitch-secondary-channel-hue-scale)",e.pitchSecondaryChannelSat="var(--pitch-secondary-channel-sat)",e.pitchSecondaryChannelSatScale="var(--pitch-secondary-channel-sat-scale)",e.pitchSecondaryChannelLum="var(--pitch-secondary-channel-lum)",e.pitchSecondaryChannelLumScale="var(--pitch-secondary-channel-lum-scale)",e.pitchPrimaryChannelHue="var(--pitch-primary-channel-hue)",e.pitchPrimaryChannelHueScale="var(--pitch-primary-channel-hue-scale)",e.pitchPrimaryChannelSat="var(--pitch-primary-channel-sat)",e.pitchPrimaryChannelSatScale="var(--pitch-primary-channel-sat-scale)",e.pitchPrimaryChannelLum="var(--pitch-primary-channel-lum)",e.pitchPrimaryChannelLumScale="var(--pitch-primary-channel-lum-scale)",e.pitchSecondaryNoteHue="var(--pitch-secondary-note-hue)",e.pitchSecondaryNoteHueScale="var(--pitch-secondary-note-hue-scale)",e.pitchSecondaryNoteSat="var(--pitch-secondary-note-sat)",e.pitchSecondaryNoteSatScale="var(--pitch-secondary-note-sat-scale)",e.pitchSecondaryNoteLum="var(--pitch-secondary-note-lum)",e.pitchSecondaryNoteLumScale="var(--pitch-secondary-note-lum-scale)",e.pitchPrimaryNoteHue="var(--pitch-primary-note-hue)",e.pitchPrimaryNoteHueScale="var(--pitch-primary-note-hue-scale)",e.pitchPrimaryNoteSat="var(--pitch-primary-note-sat)",e.pitchPrimaryNoteSatScale="var(--pitch-primary-note-sat-scale)",e.pitchPrimaryNoteLum="var(--pitch-primary-note-lum)",e.pitchPrimaryNoteLumScale="var(--pitch-primary-note-lum-scale)",e.modSecondaryChannelHue="var(--mod-secondary-channel-hue)",e.modSecondaryChannelHueScale="var(--mod-secondary-channel-hue-scale)",e.modSecondaryChannelSat="var(--mod-secondary-channel-sat)",e.modSecondaryChannelSatScale="var(--mod-secondary-channel-sat-scale)",e.modSecondaryChannelLum="var(--mod-secondary-channel-lum)",e.modSecondaryChannelLumScale="var(--mod-secondary-channel-lum-scale)",e.modPrimaryChannelHue="var(--mod-primary-channel-hue)",e.modPrimaryChannelHueScale="var(--mod-primary-channel-hue-scale)",e.modPrimaryChannelSat="var(--mod-primary-channel-sat)",e.modPrimaryChannelSatScale="var(--mod-primary-channel-sat-scale)",e.modPrimaryChannelLum="var(--mod-primary-channel-lum)",e.modPrimaryChannelLumScale="var(--mod-primary-channel-lum-scale)",e.modSecondaryNoteHue="var(--mod-secondary-note-hue)",e.modSecondaryNoteHueScale="var(--mod-secondary-note-hue-scale)",e.modSecondaryNoteSat="var(--mod-secondary-note-sat)",e.modSecondaryNoteSatScale="var(--mod-secondary-note-sat-scale)",e.modSecondaryNoteLum="var(--mod-secondary-note-lum)",e.modSecondaryNoteLumScale="var(--mod-secondary-note-lum-scale)",e.modPrimaryNoteHue="var(--mod-primary-note-hue)",e.modPrimaryNoteHueScale="var(--mod-primary-note-hue-scale)",e.modPrimaryNoteSat="var(--mod-primary-note-sat)",e.modPrimaryNoteSatScale="var(--mod-primary-note-sat-scale)",e.modPrimaryNoteLum="var(--mod-primary-note-lum)",e.modPrimaryNoteLumScale="var(--mod-primary-note-lum-scale)",e.noiseSecondaryChannelHue="var(--noise-secondary-channel-hue)",e.noiseSecondaryChannelHueScale="var(--noise-secondary-channel-hue-scale)",e.noiseSecondaryChannelSat="var(--noise-secondary-channel-sat)",e.noiseSecondaryChannelSatScale="var(--noise-secondary-channel-sat-scale)",e.noiseSecondaryChannelLum="var(--noise-secondary-channel-lum)",e.noiseSecondaryChannelLumScale="var(--noise-secondary-channel-lum-scale)",e.noisePrimaryChannelHue="var(--noise-primary-channel-hue)",e.noisePrimaryChannelHueScale="var(--noise-primary-channel-hue-scale)",e.noisePrimaryChannelSat="var(--noise-primary-channel-sat)",e.noisePrimaryChannelSatScale="var(--noise-primary-channel-sat-scale)",e.noisePrimaryChannelLum="var(--noise-primary-channel-lum)",e.noisePrimaryChannelLumScale="var(--noise-primary-channel-lum-scale)",e.noiseSecondaryNoteHue="var(--noise-secondary-note-hue)",e.noiseSecondaryNoteHueScale="var(--noise-secondary-note-hue-scale)",e.noiseSecondaryNoteSat="var(--noise-secondary-note-sat)",e.noiseSecondaryNoteSatScale="var(--noise-secondary-note-sat-scale)",e.noiseSecondaryNoteLum="var(--noise-secondary-note-lum)",e.noiseSecondaryNoteLumScale="var(--noise-secondary-note-lum-scale)",e.noisePrimaryNoteHue="var(--noise-primary-note-hue)",e.noisePrimaryNoteHueScale="var(--noise-primary-note-hue-scale)",e.noisePrimaryNoteSat="var(--noise-primary-note-sat)",e.noisePrimaryNoteSatScale="var(--noise-primary-note-sat-scale)",e.noisePrimaryNoteLum="var(--noise-primary-note-lum)",e.noisePrimaryNoteLumScale="var(--noise-primary-note-lum-scale)",e.trackEditorBgPitch="var(--track-editor-bg-pitch)",e.trackEditorBgPitchDim="var(--track-editor-bg-pitch-dim)",e.trackEditorBgNoise="var(--track-editor-bg-noise)",e.trackEditorBgNoiseDim="var(--track-editor-bg-noise-dim)",e.trackEditorBgMod="var(--track-editor-bg-mod)",e.trackEditorBgModDim="var(--track-editor-bg-mod-dim)",e.multiplicativeModSlider="var(--multiplicative-mod-slider)",e.overwritingModSlider="var(--overwriting-mod-slider)",e.indicatorPrimary="var(--indicator-primary)",e.indicatorSecondary="var(--indicator-secondary)",e.select2OptGroup="var(--select2-opt-group)",e.inputBoxOutline="var(--input-box-outline)",e.muteButtonNormal="var(--mute-button-normal)",e.muteButtonMod="var(--mute-button-mod)",e.modLabelPrimary="var(--mod-label-primary)",e.modLabelSecondaryText="var(--mod-label-secondary-text)",e.modLabelPrimaryText="var(--mod-label-primary-text)",e.pitchChannels=t.toNameMap([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel)",primaryChannel:"var(--pitch1-primary-channel)",secondaryNote:"var(--pitch1-secondary-note)",primaryNote:"var(--pitch1-primary-note)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel)",primaryChannel:"var(--pitch2-primary-channel)",secondaryNote:"var(--pitch2-secondary-note)",primaryNote:"var(--pitch2-primary-note)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel)",primaryChannel:"var(--pitch3-primary-channel)",secondaryNote:"var(--pitch3-secondary-note)",primaryNote:"var(--pitch3-primary-note)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel)",primaryChannel:"var(--pitch4-primary-channel)",secondaryNote:"var(--pitch4-secondary-note)",primaryNote:"var(--pitch4-primary-note)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel)",primaryChannel:"var(--pitch5-primary-channel)",secondaryNote:"var(--pitch5-secondary-note)",primaryNote:"var(--pitch5-primary-note)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel)",primaryChannel:"var(--pitch6-primary-channel)",secondaryNote:"var(--pitch6-secondary-note)",primaryNote:"var(--pitch6-primary-note)"},{name:"pitch7",secondaryChannel:"var(--pitch7-secondary-channel)",primaryChannel:"var(--pitch7-primary-channel)",secondaryNote:"var(--pitch7-secondary-note)",primaryNote:"var(--pitch7-primary-note)"},{name:"pitch8",secondaryChannel:"var(--pitch8-secondary-channel)",primaryChannel:"var(--pitch8-primary-channel)",secondaryNote:"var(--pitch8-secondary-note)",primaryNote:"var(--pitch8-primary-note)"},{name:"pitch9",secondaryChannel:"var(--pitch9-secondary-channel)",primaryChannel:"var(--pitch9-primary-channel)",secondaryNote:"var(--pitch9-secondary-note)",primaryNote:"var(--pitch9-primary-note)"},{name:"pitch10",secondaryChannel:"var(--pitch10-secondary-channel)",primaryChannel:"var(--pitch10-primary-channel)",secondaryNote:"var(--pitch10-secondary-note)",primaryNote:"var(--pitch10-primary-note)"}]),e.noiseChannels=t.toNameMap([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel)",primaryChannel:"var(--noise1-primary-channel)",secondaryNote:"var(--noise1-secondary-note)",primaryNote:"var(--noise1-primary-note)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel)",primaryChannel:"var(--noise2-primary-channel)",secondaryNote:"var(--noise2-secondary-note)",primaryNote:"var(--noise2-primary-note)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel)",primaryChannel:"var(--noise3-primary-channel)",secondaryNote:"var(--noise3-secondary-note)",primaryNote:"var(--noise3-primary-note)"},{name:"noise4",secondaryChannel:"var(--noise4-secondary-channel)",primaryChannel:"var(--noise4-primary-channel)",secondaryNote:"var(--noise4-secondary-note)",primaryNote:"var(--noise4-primary-note)"}]),e.modChannels=t.toNameMap([{name:"mod1",secondaryChannel:"var(--mod1-secondary-channel)",primaryChannel:"var(--mod1-primary-channel)",secondaryNote:"var(--mod1-secondary-note)",primaryNote:"var(--mod1-primary-note)"},{name:"mod2",secondaryChannel:"var(--mod2-secondary-channel)",primaryChannel:"var(--mod2-primary-channel)",secondaryNote:"var(--mod2-secondary-note)",primaryNote:"var(--mod2-primary-note)"},{name:"mod3",secondaryChannel:"var(--mod3-secondary-channel)",primaryChannel:"var(--mod3-primary-channel)",secondaryNote:"var(--mod3-secondary-note)",primaryNote:"var(--mod3-primary-note)"},{name:"mod4",secondaryChannel:"var(--mod4-secondary-channel)",primaryChannel:"var(--mod4-primary-channel)",secondaryNote:"var(--mod4-secondary-note)",primaryNote:"var(--mod4-primary-note)"}]),e.t=document.head.appendChild(t.HTML.style({type:"text/css"})),t.ColorConfig=e}(beepbox||(beepbox={})),function(t){function e(t){if(!function(t){return!(!t||t&t-1)}(t))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(t)/Math.log(2))}t.scaleElementsByFactor=function(t,e){for(let n=0;n<t.length;n++)t[n]*=e},t.inverseRealFourierTransform=function(t,n){const s=e(n);if(n<4)throw new Error("FFT array length must be at least 4.");for(let e=s-1;e>=2;e--){const s=1<<e,i=s>>1,a=s<<1,o=2*Math.PI/a,r=Math.cos(o),h=Math.sin(o),l=2*r;for(let e=0;e<n;e+=a){const n=e,a=n+i,o=n+s,c=o+i,m=o+s,d=t[n],p=t[o];t[n]=d+p,t[a]*=2,t[o]=d-p,t[c]*=2;let u=r,f=-h,y=1,b=0;for(let e=1;e<i;e++){const s=n+e,i=o-e,a=o+e,r=m-e,h=t[s],c=t[i],d=t[a],p=t[r],g=h-c,v=d+p;t[s]=h+c,t[i]=p-d,t[a]=g*u-v*f,t[r]=v*u+g*f;const k=l*u-y,w=l*f-b;y=u,b=f,u=k,f=w}}}for(let e=0;e<n;e+=4){const n=e+1,s=e+2,i=e+3,a=t[e],o=2*t[n],r=t[s],h=2*t[i],l=a+r,c=a-r;t[e]=l+o,t[n]=l-o,t[s]=c+h,t[i]=c-h}!function(t,n){const s=e(n);if(s>16)throw new Error("FFT array length must not be greater than 2^16.");const i=16-s;for(let e=0;e<n;e++){let n;if((n=((n=(61680&(n=(52428&(n=(43690&e)>>1|(21845&e)<<1))>>2|(13107&n)<<2))>>4|(3855&n)<<4)>>8|(255&n)<<8)>>i)>e){let s=t[e];t[e]=t[n],t[n]=s}}}(t,n)}}(beepbox||(beepbox={})),function(t){t.Deque=class{constructor(){this.s=1,this.i=[void 0],this.o=0,this.h=0,this.l=0}pushFront(t){this.l>=this.s&&this.m(),this.h=this.h-1&this.o,this.i[this.h]=t,this.l++}pushBack(t){this.l>=this.s&&this.m(),this.i[this.h+this.l&this.o]=t,this.l++}popFront(){if(this.l<=0)throw new Error("No elements left to pop.");const t=this.i[this.h];return this.i[this.h]=void 0,this.h=this.h+1&this.o,this.l--,t}popBack(){if(this.l<=0)throw new Error("No elements left to pop.");this.l--;const t=this.h+this.l&this.o,e=this.i[t];return this.i[t]=void 0,e}peakFront(){if(this.l<=0)throw new Error("No elements left to pop.");return this.i[this.h]}peakBack(){if(this.l<=0)throw new Error("No elements left to pop.");return this.i[this.h+this.l-1&this.o]}count(){return this.l}set(t,e){if(t<0||t>=this.l)throw new Error("Invalid index");this.i[this.h+t&this.o]=e}get(t){if(t<0||t>=this.l)throw new Error("Invalid index");return this.i[this.h+t&this.o]}remove(t){if(t<0||t>=this.l)throw new Error("Invalid index");if(t<=this.l>>1){for(;t>0;)this.set(t,this.get(t-1)),t--;this.popFront()}else{for(t++;t<this.l;)this.set(t-1,this.get(t)),t++;this.popBack()}}m(){if(this.s>=1073741824)throw new Error("Capacity too big.");this.s=this.s<<1;const t=this.i,e=new Array(this.s),n=0|this.l,s=0|this.h;for(let i=0;i<n;i++)e[i]=t[s+i&this.o];for(let t=n;t<this.s;t++)e[t]=void 0;this.h=0,this.i=e,this.o=this.s-1}}}(beepbox||(beepbox={})),function(t){const e=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class s{constructor(t,e,s){this.p=[],this.u=0;for(let i=e;i<s;i++){const e=n[t.charCodeAt(i)];this.p.push(e>>5&1),this.p.push(e>>4&1),this.p.push(e>>3&1),this.p.push(e>>2&1),this.p.push(e>>1&1),this.p.push(1&e)}}read(t){let e=0;for(;t>0;)e<<=1,e+=this.p[this.u++],t--;return e}readLongTail(t,e){let n=t,s=e;for(;this.p[this.u++];)n+=1<<s,s++;for(;s>0;)s--,this.p[this.u++]&&(n+=1<<s);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class i{constructor(){this.g=0,this.p=[]}clear(){this.g=0}write(t,e){for(t--;t>=0;)this.p[this.g++]=e>>>t&1,t--}writeLongTail(t,e,n){if(n<t)throw new Error("value out of bounds");n-=t;let s=e;for(;n>=1<<s;)this.p[this.g++]=1,n-=1<<s,s++;for(this.p[this.g++]=0;s>0;)s--,this.p[this.g++]=n>>>s&1}writePartDuration(t){this.writeLongTail(1,3,t)}writePinCount(t){this.writeLongTail(1,0,t)}writePitchInterval(t){t<0?(this.write(1,1),this.writeLongTail(1,3,-t)):(this.write(1,0),this.writeLongTail(1,3,t))}concat(t){for(let e=0;e<t.g;e++)this.p[this.g++]=t.p[e]}encodeBase64(t){for(let n=0;n<this.g;n+=6){const s=this.p[n]<<5|this.p[n+1]<<4|this.p[n+2]<<3|this.p[n+3]<<2|this.p[n+4]<<1|this.p[n+5];t.push(e[s])}return t}lengthBase64(){return Math.ceil(this.g/6)}}function a(t,e,n){return{interval:t,time:e,volume:n}}function o(t,e,n){return n<=(e-=1)?n>=t?n:t:e}function r(t,e,n){if(t<=n&&n<=e)return n;throw new Error(`Value ${n} not in range [${t}, ${e}]`)}t.makeNotePin=a;class h{constructor(t,e,n,s,i=!1){this.pitches=[t],this.pins=[a(0,0,s),a(0,n-e,i?0:s)],this.start=e,this.end=n}pickMainInterval(){let t=0,e=0;for(let n=1;n<this.pins.length;n++){const s=this.pins[n-1],i=this.pins[n];if(s.interval==i.interval){const n=i.time-s.time;t<n&&(t=n,e=s.interval)}}if(0==t){let t=0;for(let n=0;n<this.pins.length;n++){const s=this.pins[n];t<s.volume&&(t=s.volume,e=s.interval)}}return e}}t.Note=h;class l{constructor(){this.notes=[],this.instrument=0}cloneNotes(){const t=[];for(const e of this.notes){const n=new h(-1,e.start,e.end,6);n.pitches=e.pitches.concat(),n.pins=[];for(const t of e.pins)n.pins.push(a(t.interval,t.time,t.volume));t.push(n)}return t}reset(){this.notes.length=0,this.instrument=0}}t.Pattern=l;class c{constructor(t){this.frequency=0,this.amplitude=0,this.envelope=0,this.reset(t)}reset(e){this.frequency=0,this.amplitude=e<=1?t.Config.operatorAmplitudeMax:0,this.envelope=0==e?0:1}copy(t){this.frequency=t.frequency,this.amplitude=t.amplitude,this.envelope=t.envelope}}t.Operator=c;class m{constructor(t){this.spectrum=[],this.v=null,this.k=!1,this.reset(t)}reset(e){for(let n=0;n<t.Config.spectrumControlPoints;n++)if(e)this.spectrum[n]=Math.round(t.Config.spectrumMax*(1/Math.sqrt(1+n/3)));else{const e=0==n||7==n||11==n||14==n||16==n||18==n||21==n||23==n||n>=25;this.spectrum[n]=e?Math.max(0,Math.round(t.Config.spectrumMax*(1-n/30))):0}this.k=!1}markCustomWaveDirty(){this.k=!1}getCustomWave(e){if(!this.k||null==this.v){let s=t.Config.chipNoiseLength;null!=this.v&&this.v.length==s+1||(this.v=new Float32Array(s+1));const i=this.v;for(let t=0;t<s;t++)i[t]=0;const a=14,o=.25,r=[0,1/7,Math.log(5/4)/Math.LN2,3/7,Math.log(1.5)/Math.LN2,5/7,6/7];function n(n){return e+Math.floor(n/t.Config.spectrumControlPointsPerOctave)+r[(n+t.Config.spectrumControlPointsPerOctave)%t.Config.spectrumControlPointsPerOctave]}let h=1;for(let e=0;e<t.Config.spectrumControlPoints+1;e++){const s=e<=0?0:this.spectrum[e-1],r=e>=t.Config.spectrumControlPoints?this.spectrum[t.Config.spectrumControlPoints-1]:this.spectrum[e],l=n(e-1);let c=n(e);e>=t.Config.spectrumControlPoints&&(c=a+(c-a)*o),0==s&&0==r||(h+=.02*t.drawNoiseSpectrum(i,l,c,s/t.Config.spectrumMax,r/t.Config.spectrumMax,-.5))}this.spectrum[t.Config.spectrumControlPoints-1]>0&&(h+=.02*t.drawNoiseSpectrum(i,a+(n(t.Config.spectrumControlPoints)-a)*o,a,this.spectrum[t.Config.spectrumControlPoints-1]/t.Config.spectrumMax,0,-.5)),t.inverseRealFourierTransform(i,s),t.scaleElementsByFactor(i,5/(Math.sqrt(s)*Math.pow(h,.75))),i[s]=i[0],this.k=!0}return this.v}}t.SpectrumWave=m;class d{constructor(){this.harmonics=[],this.v=null,this.k=!1,this.reset()}reset(){for(let e=0;e<t.Config.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.Config.harmonicsMax,this.harmonics[3]=t.Config.harmonicsMax,this.harmonics[6]=t.Config.harmonicsMax,this.k=!1}markCustomWaveDirty(){this.k=!1}getCustomWave(){if(!this.k||null==this.v){let e=t.Config.harmonicsWavelength;const n=t.getDrumWave(0);null!=this.v&&this.v.length==e+1||(this.v=new Float32Array(e+1));const s=this.v;for(let t=0;t<e;t++)s[t]=0;const i=-.25;let a=1;for(let o=0;o<t.Config.harmonicsRendered;o++){const r=o+1;let h=o<t.Config.harmonicsControlPoints?this.harmonics[o]:this.harmonics[t.Config.harmonicsControlPoints-1];o>=t.Config.harmonicsControlPoints&&(h*=1-(o-t.Config.harmonicsControlPoints)/(t.Config.harmonicsRendered-t.Config.harmonicsControlPoints));const l=h/t.Config.harmonicsMax;let c=Math.pow(2,h-t.Config.harmonicsMax+1)*Math.sqrt(l);o<t.Config.harmonicsControlPoints&&(a+=c),c*=Math.pow(r,i),c*=n[o+589],s[e-r]=c}t.inverseRealFourierTransform(s,e);const o=1/Math.pow(a,.7);let r=0,h=0;for(let t=0;t<s.length;t++)r+=h,h=s[t]*o,s[t]=r;s[e]=s[0],this.k=!0}return this.v}}t.HarmonicsWave=d;class p{constructor(e,n){if(this.type=0,this.preset=0,this.chipWave=2,this.chipNoise=1,this.filterCutoff=12,this.filterResonance=0,this.filterEnvelope=1,this.transition=1,this.vibrato=0,this.interval=0,this.effects=0,this.chord=1,this.volume=0,this.pan=t.Config.panCenter,this.detune=0,this.pulseWidth=t.Config.pulseWidthRange,this.pulseEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=1,this.customChipWave=new Float64Array(64),this.customChipWaveIntegral=new Float64Array(65),this.operators=[],this.harmonicsWave=new d,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modStatuses=[],this.modInstruments=[],this.modSettings=[],n)for(let e=0;e<t.Config.modCount;e++)this.modChannels.push(0),this.modStatuses.push(u.msNone),this.modInstruments.push(0),this.modSettings.push(f.mstNone);this.spectrumWave=new m(e);for(let e=0;e<t.Config.operatorCount;e++)this.operators[e]=new c(e);for(let e=0;e<t.Config.drumCount;e++)this.drumsetEnvelopes[e]=t.Config.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new m(!0);for(let t=0;t<64;t++)this.customChipWave[t]=24-Math.floor(.75*t);let s=0;for(let t=0;t<this.customChipWave.length;t++)s+=this.customChipWave[t];const i=s/this.customChipWave.length;let a=0,o=0;for(let t=0;t<this.customChipWave.length;t++)a+=o,o=this.customChipWave[t]-i,this.customChipWaveIntegral[t]=a;this.customChipWaveIntegral[64]=0}setTypeAndReset(e,n,s){switch(s&&(e=8),this.type=e,this.preset=e,this.volume=0,this.pan=t.Config.panCenter,this.detune=0,e){case 0:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;break;case 7:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;for(let t=0;t<64;t++)this.customChipWave[t]=24-Math.floor(.75*t);let i=0;for(let t=0;t<this.customChipWave.length;t++)i+=this.customChipWave[t];const a=i/this.customChipWave.length;let o=0,r=0;for(let t=0;t<this.customChipWave.length;t++)o+=r,r=this.customChipWave[t]-a,this.customChipWaveIntegral[t]=o;this.customChipWaveIntegral[64]=0;break;case 1:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=t.Config.envelopes.dictionary.steady.index;for(let t=0;t<this.operators.length;t++)this.operators[t].reset(t);break;case 2:this.chipNoise=1,this.transition=1,this.effects=0,this.chord=2,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index;break;case 3:this.transition=1,this.effects=1,this.chord=0,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.spectrumWave.reset(n);break;case 4:this.effects=0;for(let e=0;e<t.Config.drumCount;e++)this.drumsetEnvelopes[e]=t.Config.envelopes.dictionary["twang 2"].index,void 0==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new m(!0)),this.drumsetSpectrumWaves[e].reset(n);break;case 5:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=0,this.harmonicsWave.reset();break;case 6:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2,this.pulseWidth=t.Config.pulseWidthRange,this.pulseEnvelope=t.Config.envelopes.dictionary["twang 2"].index;break;case 8:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modStatuses=[],this.modInstruments=[],this.modSettings=[];for(let e=0;e<t.Config.modCount;e++)this.modChannels.push(0),this.modStatuses.push(u.msNone),this.modInstruments.push(0),this.modSettings.push(f.mstNone);break;default:throw new Error("Unrecognized instrument type: "+e)}}toJsonObject(){const e={type:t.Config.instrumentTypeNames[this.type],volume:this.volume,pan:100*(this.pan-t.Config.panCenter)/t.Config.panCenter,detune:this.detune,effects:t.Config.effectsNames[this.effects]};if(this.preset!=this.type&&(e.preset=this.preset),4!=this.type&&(e.transition=t.Config.transitions[this.transition].name,e.chord=this.getChord().name,e.filterCutoffHz=Math.round(t.Config.filterCutoffMaxHz*Math.pow(2,this.getFilterCutoffOctaves())),e.filterResonance=Math.round(100*this.filterResonance/(t.Config.filterResonanceRange-1)),e.filterEnvelope=this.getFilterEnvelope().name),2==this.type)e.wave=t.Config.chipNoises[this.chipNoise].name;else if(3==this.type){e.spectrum=[];for(let n=0;n<t.Config.spectrumControlPoints;n++)e.spectrum[n]=Math.round(100*this.spectrumWave.spectrum[n]/t.Config.spectrumMax)}else if(4==this.type){e.drums=[];for(let n=0;n<t.Config.drumCount;n++){const s=[];for(let e=0;e<t.Config.spectrumControlPoints;e++)s[e]=Math.round(100*this.drumsetSpectrumWaves[n].spectrum[e]/t.Config.spectrumMax);e.drums[n]={filterEnvelope:this.getDrumsetEnvelope(n).name,spectrum:s}}}else if(0==this.type)e.wave=t.Config.chipWaves[this.chipWave].name,e.interval=t.Config.intervals[this.interval].name,e.vibrato=t.Config.vibratos[this.vibrato].name;else if(7==this.type){e.wave=t.Config.chipWaves[this.chipWave].name,e.interval=t.Config.intervals[this.interval].name,e.vibrato=t.Config.vibratos[this.vibrato].name,e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t];e.customChipWaveIntegral[64]=0}else if(6==this.type)e.pulseWidth=this.pulseWidth,e.pulseEnvelope=t.Config.envelopes[this.pulseEnvelope].name,e.vibrato=t.Config.vibratos[this.vibrato].name;else if(5==this.type){e.interval=t.Config.intervals[this.interval].name,e.vibrato=t.Config.vibratos[this.vibrato].name,e.harmonics=[];for(let n=0;n<t.Config.harmonicsControlPoints;n++)e.harmonics[n]=Math.round(100*this.harmonicsWave.harmonics[n]/t.Config.harmonicsMax)}else if(1==this.type){const n=[];for(const e of this.operators)n.push({frequency:t.Config.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,envelope:t.Config.envelopes[e.envelope].name});e.vibrato=t.Config.vibratos[this.vibrato].name,e.algorithm=t.Config.algorithms[this.algorithm].name,e.feedbackType=t.Config.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.feedbackEnvelope=t.Config.envelopes[this.feedbackEnvelope].name,e.operators=n}else{if(8!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modStatuses=[];for(let n=0;n<t.Config.modCount;n++)e.modChannels[n]=this.modChannels[n],e.modInstruments[n]=this.modInstruments[n],e.modSettings[n]=this.modSettings[n],e.modStatuses[n]=this.modStatuses[n]}return e}fromJsonObject(e,n,s){void 0==e&&(e={});let i=t.Config.instrumentTypeNames.indexOf(e.type);-1==i&&(i=s?8:n?2:0),this.setTypeAndReset(i,n,s),void 0!=e.preset&&(this.preset=e.preset>>>0),void 0!=e.volume?this.volume=o(-t.Config.volumeRange/2,t.Config.volumeRange/2,0|e.volume):this.volume=0,void 0!=e.pan?this.pan=o(0,t.Config.panMax+1,Math.round(t.Config.panCenter+(0|e.pan)*t.Config.panCenter/100)):this.pan=t.Config.panCenter,void 0!=e.detune?this.detune=o(t.Config.detuneMin,t.Config.detuneMax+1,0|e.detune):this.detune=0;const a={binary:0,sudden:1,smooth:2},r=e.transition||e.envelope;if(this.transition=void 0!=a[r]?a[r]:t.Config.transitions.findIndex(t=>t.name==r),-1==this.transition&&(this.transition=1),this.effects=t.Config.effectsNames.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1),void 0!=e.filterCutoffHz?this.filterCutoff=o(0,t.Config.filterCutoffRange,Math.round(t.Config.filterCutoffRange-1+2*Math.log((0|e.filterCutoffHz)/t.Config.filterCutoffMaxHz)/Math.LN2)):this.filterCutoff=0==this.type?6:10,void 0!=e.filterResonance?this.filterResonance=o(0,t.Config.filterResonanceRange,Math.round((t.Config.filterResonanceRange-1)*(0|e.filterResonance)/100)):this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.findIndex(t=>t.name==e.filterEnvelope),-1==this.filterEnvelope&&(this.filterEnvelope=t.Config.envelopes.dictionary.steady.index),void 0!=e.filter){const t=[20,12,6,0,16,10,4],n=[1,1,1,1,18,19,20],s=["none","bright","medium","soft","decay bright","decay medium","decay soft"],i={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let a=void 0!=i[e.filter]?i[e.filter]:s.indexOf(e.filter);-1==a&&(a=0),this.filterCutoff=t[a],this.filterEnvelope=n[a],this.filterResonance=0}const h=["none","vibrato light","vibrato delayed","vibrato heavy"];if(2==this.type)this.chipNoise=t.Config.chipNoises.findIndex(t=>t.name==e.wave),-1==this.chipNoise&&(this.chipNoise=1),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=2);else if(3==this.type){if(void 0!=e.spectrum)for(let n=0;n<t.Config.spectrumControlPoints;n++)this.spectrumWave.spectrum[n]=Math.max(0,Math.min(t.Config.spectrumMax,Math.round(t.Config.spectrumMax*+e.spectrum[n]/100)));this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0)}else if(4==this.type){if(void 0!=e.drums)for(let n=0;n<t.Config.drumCount;n++){const s=e.drums[n];if(void 0!=s&&(void 0!=s.filterEnvelope&&(this.drumsetEnvelopes[n]=t.Config.envelopes.findIndex(t=>t.name==s.filterEnvelope),-1==this.drumsetEnvelopes[n]&&(this.drumsetEnvelopes[n]=t.Config.envelopes.dictionary["twang 2"].index)),void 0!=s.spectrum))for(let e=0;e<t.Config.spectrumControlPoints;e++)this.drumsetSpectrumWaves[n].spectrum[e]=Math.max(0,Math.min(t.Config.spectrumMax,Math.round(t.Config.spectrumMax*+s.spectrum[e]/100)))}}else if(5==this.type){if(void 0!=e.harmonics)for(let n=0;n<t.Config.harmonicsControlPoints;n++)this.harmonicsWave.harmonics[n]=Math.max(0,Math.min(t.Config.harmonicsMax,Math.round(t.Config.harmonicsMax*+e.harmonics[n]/100)));void 0!=e.interval&&(this.interval=t.Config.intervals.findIndex(t=>t.name==e.interval),-1==this.interval&&(this.interval=0)),void 0!=e.vibrato&&(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0)}else if(6==this.type)void 0!=e.pulseWidth?this.pulseWidth=o(0,t.Config.pulseWidthRange+1,e.pulseWidth):this.pulseWidth=t.Config.pulseWidthRange,void 0!=e.pulseEnvelope&&(this.pulseEnvelope=t.Config.envelopes.findIndex(t=>t.name==e.pulseEnvelope),-1==this.pulseEnvelope&&(this.pulseEnvelope=t.Config.envelopes.dictionary.steady.index)),void 0!=e.vibrato&&(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0);else if(0==this.type){const n={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0};if(this.chipWave=void 0!=n[e.wave]?n[e.wave]:t.Config.chipWaves.findIndex(t=>t.name==e.wave),-1==this.chipWave&&(this.chipWave=1),void 0!=e.interval)this.interval=t.Config.intervals.findIndex(t=>t.name==e.interval),-1==this.interval&&(this.interval=0);else if(void 0!=e.chorus){const n={fifths:5,octaves:6};this.interval=void 0!=n[e.chorus]?n[e.chorus]:t.Config.intervals.findIndex(t=>t.name==e.chorus),-1==this.interval&&(this.interval=0)}void 0!=e.vibrato?(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)):void 0!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=2),"custom harmony"==e.chorus&&(this.interval=2,this.chord=3)}else if(1==this.type){void 0!=e.vibrato?(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)):void 0!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=3),this.algorithm=t.Config.algorithms.findIndex(t=>t.name==e.algorithm),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=t.Config.feedbacks.findIndex(t=>t.name==e.feedbackType),-1==this.feedbackType&&(this.feedbackType=0),void 0!=e.feedbackAmplitude?this.feedbackAmplitude=o(0,t.Config.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;const n={"pluck 1":6,"pluck 2":7,"pluck 3":8};this.feedbackEnvelope=void 0!=n[e.feedbackEnvelope]?n[e.feedbackEnvelope]:t.Config.envelopes.findIndex(t=>t.name==e.feedbackEnvelope),-1==this.feedbackEnvelope&&(this.feedbackEnvelope=0);for(let s=0;s<t.Config.operatorCount;s++){const i=this.operators[s];let a=void 0;e.operators&&(a=e.operators[s]),void 0==a&&(a={}),i.frequency=t.Config.operatorFrequencies.findIndex(t=>t.name==a.frequency),-1==i.frequency&&(i.frequency=0),void 0!=a.amplitude?i.amplitude=o(0,t.Config.operatorAmplitudeMax+1,0|a.amplitude):i.amplitude=0,i.envelope=void 0!=n[a.envelope]?n[a.envelope]:t.Config.envelopes.findIndex(t=>t.name==a.envelope),-1==i.envelope&&(i.envelope=0)}}else if(7==this.type){if(void 0!=e.interval)this.interval=t.Config.intervals.findIndex(t=>t.name==e.interval),-1==this.interval&&(this.interval=0);else if(void 0!=e.chorus){const n={fifths:5,octaves:6};this.interval=void 0!=n[e.chorus]?n[e.chorus]:t.Config.intervals.findIndex(t=>t.name==e.chorus),-1==this.interval&&(this.interval=0)}if(void 0!=e.vibrato?(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)):void 0!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=2),"custom harmony"==e.chorus&&(this.interval=2,this.chord=3),e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const n=t/this.customChipWave.length;let s=0,i=0;for(let t=0;t<this.customChipWave.length;t++)s+=i,i=this.customChipWave[t]-n,this.customChipWaveIntegral[t]=s;this.customChipWaveIntegral[64]=0}}else{if(8!=this.type)throw new Error("Unrecognized instrument type.");if(void 0!=e.modChannels)for(let n=0;n<t.Config.modCount;n++)this.modChannels[n]=e.modChannels[n],this.modInstruments[n]=e.modInstruments[n],this.modSettings[n]=e.modSettings[n],this.modStatuses[n]=e.modStatuses[n]}}static frequencyFromPitch(t){return 440*Math.pow(2,(t-69)/12)}static drumsetIndexReferenceDelta(e){return p.frequencyFromPitch(t.Config.spectrumBasePitch+6*e)/44100}static M(t){return 15+Math.log(p.drumsetIndexReferenceDelta(t))/Math.LN2}warmUp(){if(2==this.type)t.getDrumWave(this.chipNoise);else if(5==this.type)this.harmonicsWave.getCustomWave();else if(3==this.type)this.spectrumWave.getCustomWave(8);else if(4==this.type)for(let e=0;e<t.Config.drumCount;e++)this.drumsetSpectrumWaves[e].getCustomWave(p.M(e))}getDrumWave(){if(2==this.type)return t.getDrumWave(this.chipNoise);if(3==this.type)return this.spectrumWave.getCustomWave(8);throw new Error("Unhandled instrument type in getDrumWave")}getDrumsetWave(t){if(4==this.type)return this.drumsetSpectrumWaves[t].getCustomWave(p.M(t));throw new Error("Unhandled instrument type in getDrumWave")}getTransition(){return 4==this.type?t.Config.transitions.dictionary["hard fade"]:8==this.type?t.Config.transitions.dictionary.seamless:t.Config.transitions[this.transition]}getChord(){return 4==this.type?t.Config.chords.dictionary.harmony:t.Config.chords[this.chord]}getFilterCutoffOctaves(){return 4==this.type?0:.5*(this.filterCutoff-(t.Config.filterCutoffRange-1))}getFilterIsFirstOrder(){return 4!=this.type&&0==this.filterResonance}getFilterResonance(){return 4==this.type?1:this.filterResonance}getFilterEnvelope(){if(4==this.type)throw new Error("Can't getFilterEnvelope() for drumset.");return t.Config.envelopes[this.filterEnvelope]}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.Config.envelopes[this.drumsetEnvelopes[e]]}}let u,f;t.Instrument=p,function(t){t[t.msForPitch=0]="msForPitch",t[t.msForNoise=1]="msForNoise",t[t.msForSong=2]="msForSong",t[t.msNone=3]="msNone"}(u=t.ModStatus||(t.ModStatus={})),function(t){t[t.mstNone=0]="mstNone",t[t.mstSongVolume=1]="mstSongVolume",t[t.mstTempo=2]="mstTempo",t[t.mstReverb=3]="mstReverb",t[t.mstNextBar=4]="mstNextBar",t[t.mstInsVolume=5]="mstInsVolume",t[t.mstPan=6]="mstPan",t[t.mstFilterCut=7]="mstFilterCut",t[t.mstFilterPeak=8]="mstFilterPeak",t[t.mstFMSlider1=9]="mstFMSlider1",t[t.mstFMSlider2=10]="mstFMSlider2",t[t.mstFMSlider3=11]="mstFMSlider3",t[t.mstFMSlider4=12]="mstFMSlider4",t[t.mstFMFeedback=13]="mstFMFeedback",t[t.mstPulseWidth=14]="mstPulseWidth",t[t.mstDetune=15]="mstDetune",t[t.mstVibratoDepth=16]="mstVibratoDepth",t[t.mstSongDetune=17]="mstSongDetune",t[t.mstMaxValue=18]="mstMaxValue"}(f=t.ModSetting||(t.ModSetting={}));class y{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1}}t.Channel=y;class b{constructor(e){this.channels=[],this.mstMaxVols=new Map([[f.mstNone,6],[f.mstSongVolume,100],[f.mstTempo,t.Config.tempoMax-t.Config.tempoMin],[f.mstReverb,t.Config.reverbRange-1],[f.mstNextBar,1],[f.mstInsVolume,t.Config.volumeRange],[f.mstPan,t.Config.panMax],[f.mstFilterCut,t.Config.filterCutoffRange-1],[f.mstFilterPeak,t.Config.filterResonanceRange-1],[f.mstFMSlider1,15],[f.mstFMSlider2,15],[f.mstFMSlider3,15],[f.mstFMSlider4,15],[f.mstFMFeedback,15],[f.mstPulseWidth,t.Config.pulseWidthRange],[f.mstDetune,t.Config.detuneMax-t.Config.detuneMin],[f.mstVibratoDepth,50],[f.mstSongDetune,t.Config.songDetuneMax-t.Config.songDetuneMin]]),this.getVolumeCap=((e,n,s,i)=>{if(e&&void 0!=n&&void 0!=s&&void 0!=i){i=t.Config.modCount-i-1;let e=this.mstMaxVols.get(this.channels[n].instruments[s].modSettings[i]);return void 0!=e?e:6}return 6}),this.getVolumeCapForSetting=((t,e)=>{if(t){let t=this.mstMaxVols.get(e);return void 0!=t?t:6}return 6}),void 0!=e?this.fromBase64String(e):this.initToDefault(!0)}modValueToReal(e,n){switch(n){case f.mstTempo:e+=t.Config.tempoMin;break;case f.mstInsVolume:e-=t.Config.volumeRange/2;break;case f.mstDetune:e+=t.Config.detuneMin;break;case f.mstSongDetune:e+=t.Config.songDetuneMin;break;case f.mstFilterCut:case f.mstFilterPeak:case f.mstSongVolume:case f.mstPan:case f.mstReverb:case f.mstNextBar:case f.mstFMSlider1:case f.mstFMSlider2:case f.mstFMSlider3:case f.mstFMSlider4:case f.mstFMFeedback:case f.mstPulseWidth:case f.mstVibratoDepth:case f.mstNone:}return e}isSettingForSong(t){switch(t){case f.mstTempo:case f.mstReverb:case f.mstSongVolume:case f.mstNextBar:return!0;default:return!1}}realToModValue(e,n){switch(n){case f.mstTempo:e-=t.Config.tempoMin;break;case f.mstInsVolume:e+=t.Config.volumeRange/2;break;case f.mstDetune:e-=t.Config.detuneMin;break;case f.mstSongDetune:e-=t.Config.songDetuneMin;break;case f.mstFilterCut:case f.mstFilterPeak:case f.mstSongVolume:case f.mstPan:case f.mstReverb:case f.mstNextBar:case f.mstFMSlider1:case f.mstFMSlider2:case f.mstFMSlider3:case f.mstFMSlider4:case f.mstFMFeedback:case f.mstPulseWidth:case f.mstVibratoDepth:case f.mstNone:}return e}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getChannelIsNoise(t){return t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(t){return t>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){if(this.scale=0,this.key=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.instrumentsPerChannel=1,this.title="Unnamed",document.title=t.Config.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=0;for(let t=0;t<this.getChannelCount();t++){this.channels.length<=t&&(this.channels[t]=new y);const e=this.channels[t];e.octave=Math.max(3-t,0);for(let t=0;t<this.patternsPerChannel;t++)e.patterns.length<=t?e.patterns[t]=new l:e.patterns[t].reset();e.patterns.length=this.patternsPerChannel;const n=t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount,s=t>=this.pitchChannelCount+this.noiseChannelCount;for(let t=0;t<this.instrumentsPerChannel;t++)e.instruments.length<=t&&(e.instruments[t]=new p(n,s)),e.instruments[t].setTypeAndReset(s?8:n?2:0,n,s);e.instruments.length=this.instrumentsPerChannel;for(let t=0;t<this.barCount;t++)e.bars[t]=t<4?1:0;e.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let n,s=[];s.push(b.S),s.push(e[b.P]),s.push(78);var a=encodeURIComponent(this.title);s.push(e[a.length>>6],e[63&a.length]);for(let t=0;t<a.length;t++)s.push(a.charCodeAt(t));s.push(110,e[this.pitchChannelCount],e[this.noiseChannelCount],e[this.modChannelCount]),s.push(115,e[this.scale]),s.push(107,e[this.key]),s.push(108,e[this.loopStart>>6],e[63&this.loopStart]),s.push(101,e[this.loopLength-1>>6],e[this.loopLength-1&63]),s.push(116,e[this.tempo>>6],e[63&this.tempo]),s.push(109,e[this.reverb]),s.push(97,e[this.beatsPerBar-1]),s.push(103,e[this.barCount-1>>6],e[this.barCount-1&63]),s.push(106,e[this.patternsPerChannel-1>>6],e[this.patternsPerChannel-1&63]),s.push(105,e[this.instrumentsPerChannel-1]),s.push(114,e[this.rhythm]),s.push(111);for(let t=0;t<this.getChannelCount();t++)s.push(e[this.channels[t].octave]);for(let n=0;n<this.getChannelCount();n++)for(let a=0;a<this.instrumentsPerChannel;a++){const o=this.channels[n].instruments[a];if(s.push(84,e[o.type]),s.push(118,e[o.volume+t.Config.volumeRange/2>>6],e[o.volume+t.Config.volumeRange/2&63]),s.push(76,e[o.pan>>6],e[63&o.pan]),s.push(68,e[o.detune-t.Config.detuneMin>>6],e[o.detune-t.Config.detuneMin&63]),s.push(117,e[o.preset>>6],e[63&o.preset]),s.push(113,e[o.effects]),4!=o.type&&(s.push(100,e[o.transition]),s.push(102,e[o.filterCutoff]),s.push(121,e[o.filterResonance]),s.push(122,e[o.filterEnvelope]),s.push(67,e[o.chord])),0==o.type)s.push(119,e[o.chipWave]),s.push(99,e[o.vibrato]),s.push(104,e[o.interval]);else if(1==o.type){s.push(99,e[o.vibrato]),s.push(65,e[o.algorithm]),s.push(70,e[o.feedbackType]),s.push(66,e[o.feedbackAmplitude]),s.push(86,e[o.feedbackEnvelope]),s.push(81);for(let n=0;n<t.Config.operatorCount;n++)s.push(e[o.operators[n].frequency]);s.push(80);for(let n=0;n<t.Config.operatorCount;n++)s.push(e[o.operators[n].amplitude]);s.push(69);for(let n=0;n<t.Config.operatorCount;n++)s.push(e[o.operators[n].envelope])}else if(7==o.type){s.push(119,e[o.chipWave]),s.push(99,e[o.vibrato]),s.push(104,e[o.interval]),s.push(77);for(let t=0;t<64;t++)s.push(e[o.customChipWave[t]+24])}else if(2==o.type)s.push(119,e[o.chipNoise]);else if(3==o.type){s.push(83);const e=new i;for(let n=0;n<t.Config.spectrumControlPoints;n++)e.write(t.Config.spectrumControlPointBits,o.spectrumWave.spectrum[n]);e.encodeBase64(s)}else if(4==o.type){s.push(122);for(let n=0;n<t.Config.drumCount;n++)s.push(e[o.drumsetEnvelopes[n]]);s.push(83);const n=new i;for(let e=0;e<t.Config.drumCount;e++)for(let s=0;s<t.Config.spectrumControlPoints;s++)n.write(t.Config.spectrumControlPointBits,o.drumsetSpectrumWaves[e].spectrum[s]);n.encodeBase64(s)}else if(5==o.type){s.push(99,e[o.vibrato]),s.push(104,e[o.interval]),s.push(72);const n=new i;for(let e=0;e<t.Config.harmonicsControlPoints;e++)n.write(t.Config.harmonicsControlPointBits,o.harmonicsWave.harmonics[e]);n.encodeBase64(s)}else if(6==o.type)s.push(99,e[o.vibrato]),s.push(87,e[o.pulseWidth],e[o.pulseEnvelope]);else if(8!=o.type)throw new Error("Unknown instrument type.")}s.push(98),n=new i;let o=0;for(;1<<o<this.patternsPerChannel+1;)o++;for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)n.write(o,this.channels[t].bars[e]);n.encodeBase64(s),s.push(112),n=new i;const r=new i;let h=0;for(;1<<h<this.instrumentsPerChannel;)h++;for(let e=0;e<this.getChannelCount();e++){const s=this.getChannelIsNoise(e),i=this.getChannelIsMod(e);if(i)for(let s=0;s<this.instrumentsPerChannel;s++){let i=this.channels[e].instruments[s];for(let e=0;e<t.Config.modCount;e++){const t=i.modStatuses[e],s=i.modChannels[e],a=i.modInstruments[e],o=i.modSettings[e];n.write(2,t),t!=u.msForPitch&&t!=u.msForNoise||(n.write(8,s),n.write(h,a)),t!=u.msNone&&n.write(6,o)}}const a=s||i?0:12*this.channels[e].octave;let o=(s||i?4:12)+a;const l=i?[0,1,2,3,4,5]:s?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],c=[];for(let t=0;t<l.length;t++)l[t]+=a;for(const s of this.channels[e].patterns)if(n.write(h,s.instrument),s.notes.length>0){n.write(1,1);let e=0;for(const a of s.notes){a.start<e&&i&&(n.write(2,0),n.write(1,1),n.writePartDuration(e-a.start)),a.start>e&&(n.write(2,0),i&&n.write(1,0),n.writePartDuration(a.start-e)),r.clear();for(let t=1;t<a.pitches.length;t++)r.write(1,1);a.pitches.length<t.Config.maxChordSize&&r.write(1,0),r.writePinCount(a.pins.length-1),i?r.write(9,a.pins[0].volume):r.write(3,a.pins[0].volume);let s=0,h=a.pitches[0],m=h;const d=[];for(let t=1;t<a.pins.length;t++){const e=a.pins[t],n=h+e.interval;m!=n?(r.write(1,1),d.push(n),m=n):r.write(1,0),r.writePartDuration(e.time-s),s=e.time,i?r.write(9,e.volume):r.write(3,e.volume)}const p=String.fromCharCode.apply(null,r.encodeBase64([])),u=c.indexOf(p);-1==u?(n.write(2,1),n.concat(r)):(n.write(1,1),n.writeLongTail(0,0,u),c.splice(u,1)),c.unshift(p),c.length>10&&c.pop();const f=a.pitches.concat(d);for(let t=0;t<f.length;t++){const e=f[t],s=l.indexOf(e);if(-1==s){let t=0,s=o;if(s<e)for(;s!=e;)s++,-1==l.indexOf(s)&&t++;else for(;s!=e;)s--,-1==l.indexOf(s)&&t--;n.write(1,0),n.writePitchInterval(t)}else n.write(1,1),n.write(3,s),l.splice(s,1);l.unshift(e),l.length>8&&l.pop(),o=t==a.pitches.length-1?a.pitches[0]:e}e=a.end}e<this.beatsPerBar*t.Config.partsPerBeat+ +i&&(n.write(2,0),i&&n.write(1,0),n.writePartDuration(this.beatsPerBar*t.Config.partsPerBeat+ +i-e))}else n.write(1,0)}let l=n.lengthBase64(),c=[];for(;l>0;)c.unshift(e[63&l]),l>>=6;s.push(e[c.length]),Array.prototype.push.apply(s,c),n.encodeBase64(s);if(s.length<64e3)return String.fromCharCode.apply(null,s);{let t="";for(let e=0;e<s.length;e+=64e3)t+=String.fromCharCode.apply(null,s.slice(e,e+64e3));return t}}fromBase64String(e){if(null==e||""==e)return void this.initToDefault(!0);let i=0;for(;e.charCodeAt(i)<=32;)i++;if(35==e.charCodeAt(i)&&i++,123==e.charCodeAt(i))return void this.fromJsonObject(JSON.parse(0==i?e:e.substring(i)));var c="";106==e.charCodeAt(i)?(c="jummbox",i++):c="beepbox";const m=n[e.charCodeAt(i++)];if("beepbox"==c&&(-1==m||m>b.N||m<b.T))return;if("jummbox"==c&&(-1==m||m>b.P||m<b.O))return;const d=m<2,f=m<3,g=m<4,v=m<5,k=m<6,w=m<7,M=m<8;if(this.initToDefault("beepbox"==c&&k),f&&"beepbox"==c){for(const t of this.channels)t.instruments[0].transition=0;this.channels[3].instruments[0].chipNoise=0}let x,C,S=0,F=-1,B=[];for(;i<e.length;)switch(x=e.charCodeAt(i++)){case 78:var D=(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)];this.title=decodeURIComponent(e.substring(i,i+D)),document.title=this.title+" - "+t.Config.versionDisplayName,i+=D;break;case 110:this.pitchChannelCount=n[e.charCodeAt(i++)],this.noiseChannelCount=n[e.charCodeAt(i++)],this.modChannelCount="beepbox"==c||d?0:n[e.charCodeAt(i++)],this.pitchChannelCount=r(t.Config.pitchChannelCountMin,t.Config.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=r(t.Config.noiseChannelCountMin,t.Config.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=r(t.Config.modChannelCountMin,t.Config.modChannelCountMax,this.modChannelCount);for(let t=this.channels.length;t<this.getChannelCount();t++)this.channels[t]=new y;this.channels.length=this.getChannelCount();break;case 115:this.scale=n[e.charCodeAt(i++)],"beepbox"==c&&(this.scale=0);break;case 107:this.key=o(0,t.Config.keys.length,w&&"beepbox"==c?11-n[e.charCodeAt(i++)]:n[e.charCodeAt(i++)]);break;case 108:this.loopStart=v&&"beepbox"==c?n[e.charCodeAt(i++)]:(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)];break;case 101:this.loopLength=v&&"beepbox"==c?n[e.charCodeAt(i++)]:(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)]+1;break;case 116:this.tempo=g&&"beepbox"==c?[95,120,151,190][n[e.charCodeAt(i++)]]:w&&"beepbox"==c?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][n[e.charCodeAt(i++)]]:n[e.charCodeAt(i++)]<<6|n[e.charCodeAt(i++)],this.tempo=o(t.Config.tempoMin,t.Config.tempoMax+1,this.tempo);break;case 109:"beepbox"==c?(this.reverb=8*n[e.charCodeAt(i++)],this.reverb=o(0,t.Config.reverbRange,this.reverb)):(this.reverb=n[e.charCodeAt(i++)],this.reverb=o(0,t.Config.reverbRange,this.reverb));break;case 97:this.beatsPerBar=f&&"beepbox"==c?[6,7,8,9,10][n[e.charCodeAt(i++)]]:n[e.charCodeAt(i++)]+1,this.beatsPerBar=Math.max(t.Config.beatsPerBarMin,Math.min(t.Config.beatsPerBarMax,this.beatsPerBar));break;case 103:{const s=(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)]+1;this.barCount=r(t.Config.barCountMin,t.Config.barCountMax,s);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].bars.length;e<this.barCount;e++)this.channels[t].bars[e]=e<4?1:0;this.channels[t].bars.length=this.barCount}}break;case 106:this.patternsPerChannel="beepbox"==c&&M?n[e.charCodeAt(i++)]+1:(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)]+1,this.patternsPerChannel=r(1,t.Config.barCountMax,this.patternsPerChannel);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].patterns.length;e<this.patternsPerChannel;e++)this.channels[t].patterns[e]=new l;this.channels[t].patterns.length=this.patternsPerChannel}break;case 105:{const s=n[e.charCodeAt(i++)]+1;this.instrumentsPerChannel=r(t.Config.instrumentsPerChannelMin,t.Config.instrumentsPerChannelMax,s);for(let t=0;t<this.getChannelCount();t++){const e=t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount,n=t>=this.pitchChannelCount+this.noiseChannelCount;for(let s=this.channels[t].instruments.length;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s]=new p(e,n);if(this.channels[t].instruments.length=this.instrumentsPerChannel,k&&"beepbox"==c)for(let s=0;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s].setTypeAndReset(e?2:0,e,n)}}break;case 114:this.rhythm=n[e.charCodeAt(i++)];break;case 111:if(f&&"beepbox"==c)C=n[e.charCodeAt(i++)],this.channels[C].octave=o(0,t.Config.maxScrollableOctaves+1,n[e.charCodeAt(i++)]),B[C]=o(0,t.Config.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,this.channels[C].octave);else for(C=0;C<this.getChannelCount();C++)this.channels[C].octave=o(0,t.Config.maxScrollableOctaves+1,n[e.charCodeAt(i++)]),B[C]=o(0,t.Config.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,this.channels[C].octave);break;case 84:{++F>=this.instrumentsPerChannel&&(S++,F=0),r(0,this.channels.length-1,S);const t=this.channels[S].instruments[F],s=o(0,9,n[e.charCodeAt(i++)]);t.setTypeAndReset(s,S>=this.pitchChannelCount&&S<this.pitchChannelCount+this.noiseChannelCount,S>=this.pitchChannelCount+this.noiseChannelCount)}break;case 117:{const t=n[e.charCodeAt(i++)]<<6|n[e.charCodeAt(i++)];this.channels[S].instruments[F].preset=t}break;case 119:if(f&&"beepbox"==c){const s=[1,2,3,4,5,6,7,8,0],a=n[e.charCodeAt(i++)];this.channels[a].instruments[0].chipWave=o(0,t.Config.chipWaves.length,0|s[n[e.charCodeAt(i++)]])}else if(k&&"beepbox"==c){const s=[1,2,3,4,5,6,7,8,0];for(let a=0;a<this.getChannelCount();a++)for(let r=0;r<this.instrumentsPerChannel;r++)a>=this.pitchChannelCount?this.channels[a].instruments[r].chipNoise=o(0,t.Config.chipNoises.length,n[e.charCodeAt(i++)]):this.channels[a].instruments[r].chipWave=o(0,t.Config.chipWaves.length,0|s[n[e.charCodeAt(i++)]])}else if(w&&"beepbox"==c){const s=[1,2,3,4,5,6,7,8,0];S>=this.pitchChannelCount?this.channels[S].instruments[F].chipNoise=o(0,t.Config.chipNoises.length,n[e.charCodeAt(i++)]):this.channels[S].instruments[F].chipWave=o(0,t.Config.chipWaves.length,0|s[n[e.charCodeAt(i++)]])}else S>=this.pitchChannelCount?this.channels[S].instruments[F].chipNoise=o(0,t.Config.chipNoises.length,n[e.charCodeAt(i++)]):this.channels[S].instruments[F].chipWave=o(0,t.Config.chipWaves.length,n[e.charCodeAt(i++)]);break;case 102:if(w&&"beepbox"==c){const t=[10,6,3,0,8,5,2],s=[1,1,1,1,18,19,20],a=["none","bright","medium","soft","decay bright","decay medium","decay soft"];if(f&&"beepbox"==c){C=n[e.charCodeAt(i++)];const r=this.channels[C].instruments[0],h=[1,3,4,5][o(0,a.length,n[e.charCodeAt(i++)])];r.filterCutoff=t[h],r.filterEnvelope=s[h],r.filterResonance=0}else if(k&&"beepbox"==c)for(C=0;C<this.getChannelCount();C++)for(let r=0;r<this.instrumentsPerChannel;r++){const h=this.channels[C].instruments[r],l=o(0,a.length,n[e.charCodeAt(i++)]+1);C<this.pitchChannelCount?(h.filterCutoff=t[l],h.filterEnvelope=s[l],h.filterResonance=0):(h.filterCutoff=10,h.filterEnvelope=1,h.filterResonance=0)}else{const r=o(0,a.length,n[e.charCodeAt(i++)]),h=this.channels[S].instruments[F];h.filterCutoff=t[r],h.filterEnvelope=s[r],h.filterResonance=0}}else{this.channels[S].instruments[F].filterCutoff=o(0,t.Config.filterCutoffRange,n[e.charCodeAt(i++)])}break;case 121:this.channels[S].instruments[F].filterResonance=o(0,t.Config.filterResonanceRange,n[e.charCodeAt(i++)]);break;case 122:{const s=this.channels[S].instruments[F];if(4==s.type)for(let a=0;a<t.Config.drumCount;a++)s.drumsetEnvelopes[a]=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)]);else s.filterEnvelope=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)])}break;case 87:if("beepbox"==c){const s=this.channels[S].instruments[F];s.pulseWidth=Math.round(o(0,t.Config.pulseWidthRange+1,50*Math.pow(.5,.5*(7-n[e.charCodeAt(i++)])))),s.pulseEnvelope=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)])}else{const s=this.channels[S].instruments[F];s.pulseWidth=o(0,t.Config.pulseWidthRange+1,n[e.charCodeAt(i++)]),s.pulseEnvelope=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)])}break;case 100:if(f&&"beepbox"==c)C=n[e.charCodeAt(i++)],this.channels[C].instruments[0].transition=o(0,t.Config.transitions.length,n[e.charCodeAt(i++)]);else if(k&&"beepbox"==c)for(C=0;C<this.getChannelCount();C++)for(let s=0;s<this.instrumentsPerChannel;s++)this.channels[C].instruments[s].transition=o(0,t.Config.transitions.length,n[e.charCodeAt(i++)]);else this.channels[S].instruments[F].transition=o(0,t.Config.transitions.length,n[e.charCodeAt(i++)]);break;case 99:if(f&&"beepbox"==c){const t=[0,3,2,0],s=[1,1,1,13],a=n[e.charCodeAt(i++)],r=o(0,t.length,n[e.charCodeAt(i++)]),h=this.channels[a].instruments[0];h.vibrato=t[r],h.filterEnvelope=1==h.filterEnvelope?s[r]:h.filterEnvelope}else if(k&&"beepbox"==c){const t=[0,1,2,3,0,0],s=[1,1,1,1,16,13];for(let a=0;a<this.getChannelCount();a++)for(let r=0;r<this.instrumentsPerChannel;r++){const h=o(0,t.length,n[e.charCodeAt(i++)]),l=this.channels[a].instruments[r];l.vibrato=t[h],l.filterEnvelope=1==l.filterEnvelope?s[h]:l.filterEnvelope}}else if(w&&"beepbox"==c){const t=[0,1,2,3,0,0],s=[1,1,1,1,16,13],a=o(0,t.length,n[e.charCodeAt(i++)]),r=this.channels[S].instruments[F];r.vibrato=t[a],r.filterEnvelope=1==r.filterEnvelope?s[a]:r.filterEnvelope}else{const s=o(0,t.Config.vibratos.length,n[e.charCodeAt(i++)]);this.channels[S].instruments[F].vibrato=s}break;case 104:if(f&&"beepbox"==c)C=n[e.charCodeAt(i++)],this.channels[C].instruments[0].interval=o(0,t.Config.intervals.length,n[e.charCodeAt(i++)]);else if(k&&"beepbox"==c)for(C=0;C<this.getChannelCount();C++)for(let s=0;s<this.instrumentsPerChannel;s++){const a=n[e.charCodeAt(i++)];let r=o(0,t.Config.intervals.length,a);8==a&&(r=2,this.channels[C].instruments[s].chord=3),this.channels[C].instruments[s].interval=r}else if(w&&"beepbox"==c){const s=n[e.charCodeAt(i++)];let a=o(0,t.Config.intervals.length,s);8==s&&(a=2,this.channels[S].instruments[F].chord=3),this.channels[S].instruments[F].interval=a}else this.channels[S].instruments[F].interval=o(0,t.Config.intervals.length,n[e.charCodeAt(i++)]);break;case 67:this.channels[S].instruments[F].chord=o(0,t.Config.chords.length,n[e.charCodeAt(i++)]);break;case 113:this.channels[S].instruments[F].effects=o(0,t.Config.effectsNames.length,n[e.charCodeAt(i++)]);break;case 118:if(f&&"beepbox"==c){C=n[e.charCodeAt(i++)],this.channels[C].instruments[0].volume=Math.round(o(-t.Config.volumeRange,1,5*-n[e.charCodeAt(i++)]))}else if(k&&"beepbox"==c)for(C=0;C<this.getChannelCount();C++)for(let s=0;s<this.instrumentsPerChannel;s++){this.channels[C].instruments[s].volume=Math.round(o(-t.Config.volumeRange,1,5*-n[e.charCodeAt(i++)]))}else if(w&&"beepbox"==c){this.channels[S].instruments[F].volume=Math.round(o(-t.Config.volumeRange,1,5*-n[e.charCodeAt(i++)]))}else if("beepbox"==c){this.channels[S].instruments[F].volume=Math.round(o(-t.Config.volumeRange/2,1,25*-n[e.charCodeAt(i++)]/7))}else{this.channels[S].instruments[F].volume=Math.round(o(-t.Config.volumeRange/2,t.Config.volumeRange/2+1,(n[e.charCodeAt(i++)]<<6|n[e.charCodeAt(i++)])-t.Config.volumeRange/2))}break;case 76:{const s=this.channels[S].instruments[F];s.pan=o(0,t.Config.panMax+1,"beepbox"==c?Math.round(n[e.charCodeAt(i++)]*(t.Config.panMax/8)):(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)])}break;case 68:this.channels[S].instruments[F].detune=o(t.Config.detuneMin,t.Config.detuneMax+1,(n[e.charCodeAt(i++)]<<6)+n[e.charCodeAt(i++)]+t.Config.detuneMin);break;case 77:{let t=this.channels[S].instruments[F];for(let s=0;s<64;s++)t.customChipWave[s]=o(-24,25,n[e.charCodeAt(i++)]-24);let s=0;for(let e=0;e<t.customChipWave.length;e++)s+=t.customChipWave[e];const a=s/t.customChipWave.length;let r=0,h=0;for(let e=0;e<t.customChipWave.length;e++)r+=h,h=t.customChipWave[e]-a,t.customChipWaveIntegral[e]=r;t.customChipWaveIntegral[64]=0}break;case 65:this.channels[S].instruments[F].algorithm=o(0,t.Config.algorithms.length,n[e.charCodeAt(i++)]);break;case 70:this.channels[S].instruments[F].feedbackType=o(0,t.Config.feedbacks.length,n[e.charCodeAt(i++)]);break;case 66:this.channels[S].instruments[F].feedbackAmplitude=o(0,t.Config.operatorAmplitudeMax+1,n[e.charCodeAt(i++)]);break;case 86:this.channels[S].instruments[F].feedbackEnvelope=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)]);break;case 81:for(let s=0;s<t.Config.operatorCount;s++)this.channels[S].instruments[F].operators[s].frequency=o(0,t.Config.operatorFrequencies.length,n[e.charCodeAt(i++)]);break;case 80:for(let s=0;s<t.Config.operatorCount;s++)this.channels[S].instruments[F].operators[s].amplitude=o(0,t.Config.operatorAmplitudeMax+1,n[e.charCodeAt(i++)]);break;case 69:for(let s=0;s<t.Config.operatorCount;s++)this.channels[S].instruments[F].operators[s].envelope=o(0,t.Config.envelopes.length,n[e.charCodeAt(i++)]);break;case 83:{const n=this.channels[S].instruments[F];if(3==n.type){const a=Math.ceil(t.Config.spectrumControlPoints*t.Config.spectrumControlPointBits/6),o=new s(e,i,i+a);for(let e=0;e<t.Config.spectrumControlPoints;e++)n.spectrumWave.spectrum[e]=o.read(t.Config.spectrumControlPointBits);n.spectrumWave.markCustomWaveDirty(),i+=a}else{if(4!=n.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const a=Math.ceil(t.Config.drumCount*t.Config.spectrumControlPoints*t.Config.spectrumControlPointBits/6),o=new s(e,i,i+a);for(let e=0;e<t.Config.drumCount;e++){for(let s=0;s<t.Config.spectrumControlPoints;s++)n.drumsetSpectrumWaves[e].spectrum[s]=o.read(t.Config.spectrumControlPointBits);n.drumsetSpectrumWaves[e].markCustomWaveDirty()}i+=a}}}break;case 72:{const n=this.channels[S].instruments[F],a=Math.ceil(t.Config.harmonicsControlPoints*t.Config.harmonicsControlPointBits/6),o=new s(e,i,i+a);for(let e=0;e<t.Config.harmonicsControlPoints;e++)n.harmonicsWave.harmonics[e]=o.read(t.Config.harmonicsControlPointBits);n.harmonicsWave.markCustomWaveDirty(),i+=a}break;case 98:{let t;if(f&&"beepbox"==c){C=n[e.charCodeAt(i++)];const a=n[e.charCodeAt(i++)];t=Math.ceil(.5*a);const o=new s(e,i,i+t);for(let t=0;t<a;t++)this.channels[C].bars[t]=o.read(3)+1}else if(v&&"beepbox"==c){let n=0;for(;1<<n<this.patternsPerChannel;)n++;t=Math.ceil(this.getChannelCount()*this.barCount*n/6);const a=new s(e,i,i+t);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=a.read(n)+1}else{let n=0;for(;1<<n<this.patternsPerChannel+1;)n++;t=Math.ceil(this.getChannelCount()*this.barCount*n/6);const a=new s(e,i,i+t);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=a.read(n)}i+=t}break;case 112:{let l,m=0;if(f&&"beepbox"==c)l=n[e.charCodeAt(i++)],i++,m=n[e.charCodeAt(i++)],m<<=6,m+=n[e.charCodeAt(i++)];else{l=0;let t=r(1,4,n[e.charCodeAt(i++)]);for(;t>0;)m<<=6,m+=n[e.charCodeAt(i++)],t--}const d=new s(e,i,i+m);i+=m;let p=0;for(;1<<p<this.instrumentsPerChannel;)p++;for(;;){const e=this.getChannelIsNoise(l),n=this.getChannelIsMod(l);if(n)for(let e=0;e<this.instrumentsPerChannel;e++){let n=this.channels[l].instruments[e];for(let e=0;e<t.Config.modCount;e++)n.modStatuses[e]=d.read(2),n.modStatuses[e]!=u.msForPitch&&n.modStatuses[e]!=u.msForNoise||(n.modStatuses[e]==u.msForPitch?n.modChannels[e]=o(0,this.pitchChannelCount+1,d.read(8)):n.modChannels[e]=o(0,this.noiseChannelCount+1,d.read(8)),n.modInstruments[e]=o(0,this.instrumentsPerChannel+1,d.read(p))),n.modStatuses[e]!=u.msNone&&(n.modSettings[e]=d.read(6))}const s=e||n?0:12*this.channels[l].octave;let i=null,m=null,y=(e||n?4:12)+s;const b=n?[0,1,2,3,4,5]:e?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],g=[];for(let t=0;t<b.length;t++)b[t]+=s;for(let e=0;e<this.patternsPerChannel;e++){const s=this.channels[l].patterns[e];if(s.reset(),s.instrument=d.read(p),("beepbox"!=c||!f)&&0==d.read(1))continue;let o=0;const u=s.notes;for(;o<this.beatsPerBar*t.Config.partsPerBeat+ +n;){const e=1==d.read(1);let s=!1,l=0;if(e?l=r(0,g.length-1,d.readLongTail(0,0)):s=1==d.read(1),e||s){let s,p,f;if(e)s=g[l],g.splice(l,1);else{for((s={}).pitchCount=1;s.pitchCount<t.Config.maxChordSize&&1==d.read(1);)s.pitchCount++;s.pinCount=d.readPinCount(),s.initialVolume="beepbox"==c?2*d.read(2):n?d.read(9):d.read(3),s.pins=[],s.length=0,s.bendCount=0;for(let e=0;e<s.pinCount;e++)(p={}).pitchBend=1==d.read(1),p.pitchBend&&s.bendCount++,s.length+=w&&"beepbox"==c?d.readLegacyPartDuration()*t.Config.partsPerBeat/t.Config.rhythms[this.rhythm].stepsPerBeat:d.readPartDuration(),p.time=s.length,p.volume="beepbox"==c?2*d.read(2):n?d.read(9):d.read(3),s.pins.push(p)}g.unshift(s),g.length>10&&g.pop(),(i=new h(0,o,o+s.length,s.initialVolume)).pitches=[],i.pins.length=1;const v=[];for(let t=0;t<s.pitchCount+s.bendCount;t++){if(1==d.read(1)){const t=r(0,b.length-1,d.read(3));f=b[t],b.splice(t,1)}else{const t=d.readPitchInterval();f=y;let e=t;for(;e>0;){for(f++;-1!=b.indexOf(f);)f++;e--}for(;e<0;){for(f--;-1!=b.indexOf(f);)f--;e++}}b.unshift(f),b.length>8&&b.pop(),t<s.pitchCount?i.pitches.push(f):v.push(f),y=t==s.pitchCount-1?i.pitches[0]:f}v.unshift(i.pitches[0]);for(const t of s.pins)t.pitchBend&&v.shift(),m=a(v[0]-i.pitches[0],t.time,t.volume),i.pins.push(m);o=r(0,this.beatsPerBar*t.Config.partsPerBeat,i.end),u.push(i)}else if(n){const t=1==d.read(1),e=d.readPartDuration();t?o-=e:o+=e}else{o+=w&&"beepbox"==c?d.readLegacyPartDuration()*t.Config.partsPerBeat/t.Config.rhythms[this.rhythm].stepsPerBeat:d.readPartDuration()}}}if(f&&"beepbox"==c)break;if(++l>=this.getChannelCount())break}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(x)+" at index "+(i-1))}for(let t=0;t<this.getChannelCount();t++)null!=B[t]&&(this.channels[t].octave=B[t])}toJsonObject(e=!0,n=1,s=!0){const i=[];for(let a=0;a<this.getChannelCount();a++){const o=[],r=this.getChannelIsNoise(a),h=this.getChannelIsMod(a);for(let t=0;t<this.instrumentsPerChannel;t++)o.push(this.channels[a].instruments[t].toJsonObject());const l=[];for(const e of this.channels[a].patterns){const n=[];for(const s of e.notes){let i=this.getVolumeCapForSetting(h,this.channels[a].instruments[e.instrument].modSettings[t.Config.modCount-s.pitches[0]-1]);const o=[];for(const e of s.pins)o.push({tick:(e.time+s.start)*t.Config.rhythms[this.rhythm].stepsPerBeat/t.Config.partsPerBeat,pitchBend:e.interval,volume:Math.round(100*e.volume/i)});n.push({pitches:s.pitches,points:o})}l.push({instrument:e.instrument+1,notes:n})}const c=[];if(e)for(let t=0;t<this.loopStart;t++)c.push(this.channels[a].bars[t]);for(let t=0;t<n;t++)for(let t=this.loopStart;t<this.loopStart+this.loopLength;t++)c.push(this.channels[a].bars[t]);if(s)for(let t=this.loopStart+this.loopLength;t<this.barCount;t++)c.push(this.channels[a].bars[t]);i.push({type:h?"mod":r?"drum":"pitch",octaveScrollBar:this.channels[a].octave,instruments:o,patterns:l,sequence:c})}return{name:this.title,format:b.L,version:b.P,scale:t.Config.scales[this.scale].name,key:t.Config.keys[this.key].name,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.Config.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,channels:i}}fromJsonObject(e){if(this.initToDefault(!0),!e)return;if(void 0!=e.name&&(this.title=e.name),this.scale=0,void 0!=e.scale){const n={"romani :)":"dbl harmonic :)","romani :(":"dbl harmonic :(",enigma:"strange"},s=void 0!=n[e.scale]?n[e.scale]:e.scale,i=t.Config.scales.findIndex(t=>t.name==s);-1!=i&&(this.scale=i)}if(void 0!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%t.Config.keys.length;else if("string"==typeof e.key){const t=e.key,n=t.charAt(0).toUpperCase(),s=t.charAt(1).toLowerCase();let i={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[n];const a={"#":1,"♯":1,b:-1,"♭":-1}[s];void 0!=i&&(void 0!=a&&(i+=a),i<0&&(i+=12),i%=12,this.key=i)}void 0!=e.beatsPerMinute&&(this.tempo=o(t.Config.tempoMin,t.Config.tempoMax+1,0|e.beatsPerMinute)),void 0!=e.reverb&&(this.reverb=o(0,t.Config.reverbRange,0|e.reverb)),void 0!=e.beatsPerBar&&(this.beatsPerBar=Math.max(t.Config.beatsPerBarMin,Math.min(t.Config.beatsPerBarMax,0|e.beatsPerBar)));let n=4;void 0!=e.ticksPerBeat&&(n=0|e.ticksPerBeat||4,this.rhythm=t.Config.rhythms.findIndex(t=>t.stepsPerBeat==n),-1==this.rhythm&&(this.rhythm=1));let s=1,i=1,r=1;if(e.channels)for(const t of e.channels)t.instruments&&(s=Math.max(s,0|t.instruments.length)),t.patterns&&(i=Math.max(i,0|t.patterns.length)),t.sequence&&(r=Math.max(r,0|t.sequence.length));this.instrumentsPerChannel=Math.min(s,t.Config.instrumentsPerChannelMax),this.patternsPerChannel=Math.min(i,t.Config.barCountMax),this.barCount=Math.min(r,t.Config.barCountMax),void 0!=e.introBars&&(this.loopStart=o(0,this.barCount,0|e.introBars)),void 0!=e.loopBars&&(this.loopLength=o(1,this.barCount-this.loopStart+1,0|e.loopBars));const c=[],m=[],d=[];if(e.channels)for(let s=0;s<e.channels.length;s++){let i=e.channels[s];const r=new y;let u=!1,f=!1;void 0!=i.type?(u="drum"==i.type,f="mod"==i.type):u=s>=3,u?m.push(r):f?d.push(r):c.push(r),void 0!=i.octaveScrollBar&&(r.octave=o(0,t.Config.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,0|i.octaveScrollBar));for(let t=r.instruments.length;t<this.instrumentsPerChannel;t++)r.instruments[t]=new p(u,f);r.instruments.length=this.instrumentsPerChannel;for(let t=r.patterns.length;t<this.patternsPerChannel;t++)r.patterns[t]=new l;r.patterns.length=this.patternsPerChannel;for(let t=0;t<this.barCount;t++)r.bars[t]=1;r.bars.length=this.barCount;for(let t=0;t<this.instrumentsPerChannel;t++){r.instruments[t].fromJsonObject(i.instruments[t],u,f)}for(let e=0;e<this.patternsPerChannel;e++){const s=r.patterns[e];let l=void 0;if(i.patterns&&(l=i.patterns[e]),void 0!=l&&(s.instrument=o(0,this.instrumentsPerChannel,(0|l.instrument)-1),l.notes&&l.notes.length>0)){const e=Math.min(this.beatsPerBar*t.Config.partsPerBeat,l.notes.length>>>0);for(let i=0;i<l.notes.length&&!(i>=e);i++){const e=l.notes[i];if(!(e&&e.pitches&&e.pitches.length>=1&&e.points&&e.points.length>=2))continue;const o=new h(0,0,0,0);o.pitches=[],o.pins=[];for(let n=0;n<e.pitches.length;n++){const s=0|e.pitches[n];if(-1==o.pitches.indexOf(s)&&(o.pitches.push(s),o.pitches.length>=t.Config.maxChordSize))break}if(o.pitches.length<1)continue;let c=0;for(let i=0;i<e.points.length;i++){const h=e.points[i];if(void 0==h||void 0==h.tick)continue;const l=void 0==h.pitchBend?0:0|h.pitchBend,m=Math.round(+h.tick*t.Config.partsPerBeat/n);let d=this.getVolumeCapForSetting(f,r.instruments[s.instrument].modSettings[t.Config.modCount-o.pitches[0]-1]);const p=void 0==h.volume?d:Math.max(0,Math.min(d,Math.round((0|h.volume)*d/100)));m>this.beatsPerBar*t.Config.partsPerBeat||(0==o.pins.length&&(o.start=m,c=l),o.pins.push(a(l-c,m-o.start,p)))}if(o.pins.length<2)continue;o.end=o.pins[o.pins.length-1].time+o.start;const m=u?t.Config.drumCount-1:t.Config.maxPitch;let d=m,p=0;for(let t=0;t<o.pitches.length;t++)o.pitches[t]+=c,(o.pitches[t]<0||o.pitches[t]>m)&&(o.pitches.splice(t,1),t--),o.pitches[t]<d&&(d=o.pitches[t]),o.pitches[t]>p&&(p=o.pitches[t]);if(!(o.pitches.length<1)){for(let t=0;t<o.pins.length;t++){const e=o.pins[t];e.interval+d<0&&(e.interval=-d),e.interval+p>m&&(e.interval=m-p),t>=2&&e.interval==o.pins[t-1].interval&&e.interval==o.pins[t-2].interval&&e.volume==o.pins[t-1].volume&&e.volume==o.pins[t-2].volume&&(o.pins.splice(t-1,1),t--)}s.notes.push(o)}}}}for(let t=0;t<this.barCount;t++)r.bars[t]=i.sequence?Math.min(this.patternsPerChannel,i.sequence[t]>>>0):0}c.length>t.Config.pitchChannelCountMax&&(c.length=t.Config.pitchChannelCountMax),m.length>t.Config.noiseChannelCountMax&&(m.length=t.Config.noiseChannelCountMax),d.length>t.Config.modChannelCountMax&&(d.length=t.Config.modChannelCountMax),this.pitchChannelCount=c.length,this.noiseChannelCount=m.length,this.modChannelCount=d.length,this.channels.length=0,Array.prototype.push.apply(this.channels,c),Array.prototype.push.apply(this.channels,m),Array.prototype.push.apply(this.channels,d)}getPattern(t,e){if(e<0||e>=this.barCount)return null;const n=this.channels[t].bars[e];return 0==n?null:this.channels[t].patterns[n-1]}getPatternInstrument(t,e){const n=this.getPattern(t,e);return null==n?0:n.instrument}getBeatsPerMinute(){return this.tempo}}b.L="BeepBox",b.T=2,b.N=8,b.O=1,b.P=2,b.S=106,t.Song=b;class g{constructor(){this.pitches=[0,0,0,0],this.pitchCount=0,this.chordSize=0,this.drumsetPitch=0,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.active=!1,this.noteStart=0,this.noteEnd=0,this.noteLengthTicks=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.lastVolume=0,this.stereoVolume1=0,this.stereoVolume2=0,this.stereoOffset=0,this.stereoDelay=0,this.sample=0,this.phases=[],this.phaseDeltas=[],this.volumeStarts=[],this.volumeDeltas=[],this.volumeStart=0,this.volumeDelta=0,this.phaseDeltaScale=0,this.pulseWidth=0,this.pulseWidthDelta=0,this.filter=0,this.filterScale=0,this.filterSample0=0,this.filterSample1=0,this.vibratoScale=0,this.intervalMult=0,this.intervalVolumeMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.reset()}reset(){for(let e=0;e<t.Config.operatorCount;e++)this.phases[e]=0,this.feedbackOutputs[e]=0;this.sample=0,this.filterSample0=0,this.filterSample1=0,this.liveInputSamplesHeld=0}}class v{constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.liveInputDuration=0,this.liveInputStarted=!1,this.liveInputPitches=[],this.liveInputChannel=0,this.loopRepeatCount=-1,this.volume=1,this.playheadInternal=0,this.bar=0,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0,this.isPlayingSong=!1,this.liveInputEndTime=0,this.tonePool=new t.Deque,this.activeTones=[],this.activeModTones=[],this.releasedTones=[],this.liveInputTones=new t.Deque,this.limit=0,this.stereoBufferIndex=0,this.samplesForNone=null,this.samplesForReverb=null,this.samplesForChorus=null,this.samplesForChorusReverb=null,this.chorusDelayLine=new Float32Array(2048),this.chorusDelayPos=0,this.chorusPhase=0,this.reverbDelayLine=new Float32Array(16384),this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=(t=>{const e=t.outputBuffer,n=e.getChannelData(0),s=e.getChannelData(1);if(performance.now()<this.liveInputEndTime||this.isPlayingSong)this.synthesize(n,s,e.length,this.isPlayingSong);else{for(let t=0;t<e.length;t++)n[t]=0,s[t]=0;this.deactivateAudio()}}),null!=e&&this.setSong(e)}warmUpSynthesizer(t){if(null!=t)for(let e=0;e<t.getChannelCount();e++)for(let n=0;n<t.instrumentsPerChannel;n++)v.getInstrumentSynthFunction(t.channels[e].instruments[n]),t.channels[e].instruments[n].warmUp()}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let e=[],n=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[];for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++){n[t]=[],this.modInsValues[t]=[],this.nextModInsValues[t]=[];for(let e=0;e<this.song.instrumentsPerChannel;e++)this.modInsValues[t][e]=[],this.nextModInsValues[t][e]=[],n[t][e]=[]}let s=this.beat*t.Config.partsPerBeat+this.part;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++)if(!this.song.channels[i].muted){let a;for(let o=this.bar;o>=0;o--)if(null!=(a=this.song.getPattern(i,o))){let r=this.song.getPatternInstrument(i,o),h=this.song.channels[i].instruments[r],l=[],c=[],m=o==this.bar?s:this.findPartsInBar(o);for(const e of a.notes)if(e.start<m&&(null==l[t.Config.modCount-1-e.pitches[0]]||e.end>l[t.Config.modCount-1-e.pitches[0]]))if(e.end<=m)l[t.Config.modCount-1-e.pitches[0]]=e.end,c[t.Config.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].volume;else{l[t.Config.modCount-1-e.pitches[0]]=m;for(let n=0;n<e.pins.length;n++)if(e.pins[n].time+e.start>m){const s=e.pins[n].time-e.pins[n-1].time,i=m-e.pins[n-1].time,a=e.pins[n].volume-e.pins[n-1].volume;c[t.Config.modCount-1-e.pitches[0]]=Math.round(e.pins[n-1].volume+a*i/s)}}for(let s=0;s<t.Config.modCount;s++)null!=l[s]&&(h.modStatuses[s]==u.msForSong?(null==e[h.modSettings[s]]||o*t.Config.partsPerBeat*this.song.beatsPerBar+l[s]>e[h.modSettings[s]])&&(this.setModValue(c[s],c[s],s,h,h.modSettings[s]),e[h.modSettings[s]]=o*t.Config.partsPerBeat*this.song.beatsPerBar+l[s]):(null==n[h.modChannels[s]][h.modInstruments[s]][h.modSettings[s]]||o*t.Config.partsPerBeat*this.song.beatsPerBar+l[s]>n[h.modChannels[s]][h.modInstruments[s]][h.modSettings[s]])&&(this.setModValue(c[s],c[s],s,h,h.modSettings[s]),n[h.modChannels[s]][h.modInstruments[s]][h.modSettings[s]]=o*t.Config.partsPerBeat*this.song.beatsPerBar+l[s]))}}}}static operatorAmplitudeCurve(t){return(Math.pow(16,t/15)-1)/15}get playing(){return this.isPlayingSong}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let n=this.playheadInternal;this.bar=Math.floor(n),n=this.song.beatsPerBar*(n-this.bar),this.beat=Math.floor(n),n=t.Config.partsPerBeat*(n-this.beat),this.part=Math.floor(n),n=t.Config.ticksPerPart*(n-this.part),this.tick=Math.floor(n);const s=this.getSamplesPerTick();n=s*(n-this.tick),this.tickSampleCountdown=Math.floor(s-n)}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*t.Config.ticksPerPart*t.Config.partsPerBeat*this.song.beatsPerBar}findPartsInBar(e){if(null==this.song)return 0;let n=t.Config.partsPerBeat*this.song.beatsPerBar;for(let s=this.song.pitchChannelCount+this.song.noiseChannelCount;s<this.song.getChannelCount();s++){let i=this.song.getPattern(s,e);if(null!=i){let e=this.song.channels[s].instruments[i.instrument];for(let s=0;s<t.Config.modCount;s++)if(e.modSettings[s]==f.mstNextBar&&e.modStatuses[s]==u.msForSong)for(const e of i.notes)e.pitches[0]==t.Config.modCount-1-s&&n>e.start&&(n=e.start)}}return n}getTotalSamples(e,n,s){if(null==this.song)return-1;let i=e?0:this.song.loopStart,a=n?this.song.barCount:this.song.loopStart+this.song.loopLength,o=!1,r=!1;for(let e=this.song.pitchChannelCount+this.song.noiseChannelCount;e<this.song.getChannelCount();e++)for(let n=i;n<a;n++){let s=this.song.getPattern(e,n);if(null!=s){let n=this.song.channels[e].instruments[s.instrument];for(let e=0;e<t.Config.modCount;e++)n.modSettings[e]==f.mstTempo&&n.modStatuses[e]==u.msForSong&&(o=!0),n.modSettings[e]==f.mstNextBar&&n.modStatuses[e]==u.msForSong&&(r=!0)}}if(o||r){let e=i,n=!1,h=this.song.tempo,l=0;for(;!n;){let i=t.Config.partsPerBeat*this.song.beatsPerBar,c=0;if(r&&(i=this.findPartsInBar(e)),o){let n=!1;for(let s=this.song.pitchChannelCount+this.song.noiseChannelCount;s<this.song.getChannelCount();s++)if(0==n){let a=this.song.getPattern(s,e);if(null!=a){let e=this.song.channels[s].instruments[a.instrument];for(let s=0;s<t.Config.modCount;s++)if(0==n&&e.modSettings[s]==f.mstTempo&&e.modStatuses[s]==u.msForSong&&a.notes.find(e=>e.pitches[0]==t.Config.modCount-1-s)){n=!0,a.notes.sort(function(t,e){return t.start==e.start?t.pitches[0]-e.pitches[0]:t.start-e.start});for(const e of a.notes)if(e.pitches[0]==t.Config.modCount-1-s&&(l+=Math.min(i-c,e.start-c)*t.Config.ticksPerPart*this.getSamplesPerTickSpecificBPM(h),e.start<i))for(let n=1;n<e.pins.length;n++){if(e.pins[n-1].time+e.start<=i){const s=t.Config.ticksPerPart*Math.min(i-(e.start+e.pins[n-1].time),e.pins[n].time-e.pins[n-1].time),a=this.song.modValueToReal(e.pins[n-1].volume,f.mstTempo);let o=this.song.modValueToReal(e.pins[n].volume,f.mstTempo);e.pins[n].time+e.start>i&&(o=this.song.modValueToReal(e.pins[n-1].volume+(e.pins[n].volume-e.pins[n-1].volume)*(i-(e.start+e.pins[n-1].time))/(e.pins[n].time-e.pins[n-1].time),f.mstTempo));let r=t.Config.partsPerBeat*t.Config.ticksPerPart/60;l+=o!=a?-this.samplesPerSecond*s*(Math.log(r*o*s)-Math.log(r*a*s))/(r*(a-o)):s*this.getSamplesPerTickSpecificBPM(o),h=o}c=Math.min(e.start+e.pins[n].time,i)}}}}}l+=(i-c)*t.Config.ticksPerPart*this.getSamplesPerTickSpecificBPM(h),e++,0!=s&&e==this.song.loopStart+this.song.loopLength&&(e=this.song.loopStart,s>0&&s--),e>=a&&(n=!0)}return Math.ceil(l)}return this.getSamplesPerBar()*this.getTotalBars(e,n,s)}getTotalBars(t,e,n=this.loopRepeatCount){if(null==this.song)throw new Error;let s=this.song.loopLength*(n+1);return t&&(s+=this.song.loopStart),e&&(s+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),s}setSong(t){"string"==typeof t?this.song=new b(t):t instanceof b&&(this.song=t)}setModValue(t,e,n,s,i){let a,o;switch(i){case f.mstSongVolume:case f.mstReverb:case f.mstTempo:case f.mstSongDetune:a=this.song.modValueToReal(t,i),o=this.song.modValueToReal(e,i),null!=this.modValues[i]&&this.modValues[i]==a&&this.nextModValues[i]==o||(this.modValues[i]=a,this.nextModValues[i]=o);break;case f.mstInsVolume:case f.mstPan:case f.mstPulseWidth:case f.mstFilterCut:case f.mstFilterPeak:case f.mstFMSlider1:case f.mstFMSlider2:case f.mstFMSlider3:case f.mstFMSlider4:case f.mstFMFeedback:case f.mstVibratoDepth:case f.mstDetune:a=this.song.modValueToReal(t,i),o=this.song.modValueToReal(e,i);let r=s.modChannels[n]+(s.modStatuses[n]==u.msForNoise?this.song.pitchChannelCount:0);null!=this.modInsValues[r][s.modInstruments[n]][i]&&this.modInsValues[r][s.modInstruments[n]][i]==a&&this.nextModInsValues[r][s.modInstruments[n]][i]==o||(this.modInsValues[r][s.modInstruments[n]][i]=a,this.nextModInsValues[r][s.modInstruments[n]][i]=o);break;case f.mstNextBar:a=this.song.modValueToReal(t,i);break;case f.mstNone:default:a=-1}return a}getModValue(t,e,n,s,i){if(e){if(null!=this.modValues[t]&&null!=this.nextModValues[t])return i?this.nextModValues[t]:this.modValues[t]}else if(void 0!=n&&void 0!=s&&null!=this.modInsValues[n][s][t]&&null!=this.nextModInsValues[n][s][t])return i?this.nextModInsValues[n][s][t]:this.modInsValues[n][s][t];return-1}isAnyModActive(t,e){for(let n=0;n<f.mstMaxValue;n++)if(void 0!=this.modValues&&null!=this.modValues[n]||void 0!=this.modInsValues&&void 0!=this.modInsValues[t]&&void 0!=this.modInsValues[t][e]&&null!=this.modInsValues[t][e][n])return!0;return!1}unsetMod(t,e,n){(this.isModActive(t,!0)||void 0!=e&&void 0!=n&&this.isModActive(t,!1,e,n))&&(this.modValues[t]=null,this.nextModValues[t]=null,void 0!=e&&void 0!=n&&(this.modInsValues[e][n][t]=null,this.nextModInsValues[e][n][t]=null))}isModActive(t,e,n,s){return e?void 0!=this.modValues&&null!=this.modValues[t]:void 0!=n&&void 0!=s&&void 0!=this.modInsValues&&null!=this.modInsValues[n]&&null!=this.modInsValues[n][s]&&null!=this.modInsValues[n][s][t]&&null!=this.modInsValues[n][s][t]}activateAudio(){null!=this.audioCtx&&null!=this.scriptNode||(this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(2048,0,2):this.audioCtx.createJavaScriptNode(2048,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination)),this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.isPlayingSong=!0,this.warmUpSynthesizer(this.song),this.computeLatestModValues(),this.activateAudio())}pause(){this.isPlayingSong&&(this.isPlayingSong=!1,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[])}snapToStart(){this.bar=0,this.snapToBar()}goToBar(t){this.bar=t,this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}resetEffects(){this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.freeAllTones();for(let t=0;t<this.reverbDelayLine.length;t++)this.reverbDelayLine[t]=0;for(let t=0;t<this.chorusDelayLine.length;t++)this.chorusDelayLine[t]=0;if(null!=this.samplesForNone)for(let t=0;t<this.samplesForNone.length;t++)this.samplesForNone[t]=0;if(null!=this.samplesForReverb)for(let t=0;t<this.samplesForReverb.length;t++)this.samplesForReverb[t]=0;if(null!=this.samplesForChorus)for(let t=0;t<this.samplesForChorus.length;t++)this.samplesForChorus[t]=0;if(null!=this.samplesForChorusReverb)for(let t=0;t<this.samplesForChorusReverb.length;t++)this.samplesForChorusReverb[t]=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const t=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}}nextBar(){if(!this.song)return;const t=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}skipBar(){if(!this.song)return;const t=this.getSamplesPerTick();this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=t,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)}firstBar(){this.song&&(this.bar=0,this.playheadInternal=0,this.beat=0,this.part=0,this.playing&&this.computeLatestModValues())}jumpToEditingBar(t){this.song&&(this.bar=t,this.playheadInternal=t,this.beat=0,this.part=0,this.playing&&this.computeLatestModValues())}prevBar(){if(!this.song)return;const t=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}synthesize(e,n,s,i=!0){if(null==this.song){for(let t=0;t<s;t++)e[t]=0,n[t]=0;return void this.deactivateAudio()}const a=this.song.pitchChannelCount+this.song.noiseChannelCount;for(let e=this.activeTones.length;e<a;e++)this.activeTones[e]=new t.Deque,this.releasedTones[e]=new t.Deque;this.activeTones.length=a,this.releasedTones.length=a;for(let e=this.activeModTones.length;e<this.song.modChannelCount;e++){this.activeModTones[e]=[];for(let n=0;n<t.Config.modCount;n++)this.activeModTones[e][n]=new t.Deque;this.activeModTones[e].length=t.Config.modCount}this.activeModTones.length=this.song.modChannelCount;let o=this.getSamplesPerTick(),r=0,h=!1;(0==this.tickSampleCountdown||this.tickSampleCountdown>o)&&(this.tickSampleCountdown=o),i&&(this.beat>=this.song.beatsPerBar&&(this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=o,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(h=!0,this.pause())));const l=4*s;null!=this.samplesForNone&&this.samplesForNone.length==l&&null!=this.samplesForReverb&&this.samplesForReverb.length==l&&null!=this.samplesForChorus&&this.samplesForChorus.length==l&&null!=this.samplesForChorusReverb&&this.samplesForChorusReverb.length==l||(this.samplesForNone=new Float32Array(l),this.samplesForReverb=new Float32Array(l),this.samplesForChorus=new Float32Array(l),this.samplesForChorusReverb=new Float32Array(l),this.stereoBufferIndex=0);let c=this.stereoBufferIndex;const m=this.samplesForNone,d=this.samplesForReverb,p=this.samplesForChorus,u=this.samplesForChorusReverb,y=+this.volume,b=this.chorusDelayLine,g=this.reverbDelayLine,v=2*Math.PI/(2*this.samplesPerSecond),k=150*this.samplesPerSecond/44100,w=2048-1.51*k,M=2048-2.1*k,x=2048-3.35*k,C=2048-1.47*k,S=2048-2.15*k,F=2048-3.25*k;let B=this.chorusPhase%(2*Math.PI),D=2047&this.chorusDelayPos,E=16383&this.reverbDelayPos,P=+this.reverbFeedback0,A=+this.reverbFeedback1,N=+this.reverbFeedback2,T=+this.reverbFeedback3,O=this.song.reverb;this.isModActive(f.mstReverb,!0)&&(O=this.getModValue(f.mstReverb,!0));let L=.425*Math.pow(O/t.Config.reverbRange,.667);const I=1-Math.pow(.5,4/this.samplesPerSecond),z=1-Math.pow(.5,4e3/this.samplesPerSecond);let R=+this.limit;for(;r<s&&!h;){const O=s-r,V=this.tickSampleCountdown<=O?this.tickSampleCountdown:O;for(let e=0,n=this.song.pitchChannelCount+this.song.noiseChannelCount;e<this.song.modChannelCount;e++,n++){this.determineCurrentActiveTones(this.song,n,i);for(let s=0;s<t.Config.modCount;s++)for(let t=0;t<this.activeModTones[e][s].count();t++){const i=this.activeModTones[e][s].get(t);0==this.song.channels[n].muted&&this.playTone(this.song,c,l,n,o,V,i,!1,!1)}}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){if(e==this.liveInputChannel){this.determineLiveInputTones(this.song);for(let t=0;t<this.liveInputTones.count();t++){const n=this.liveInputTones.get(t);this.playTone(this.song,c,l,e,o,V,n,!1,!1)}}this.isModActive(f.mstReverb,!0)&&(L=.425*Math.pow(this.getModValue(f.mstReverb,!0)/t.Config.reverbRange,.667)),this.determineCurrentActiveTones(this.song,e,i);for(let t=0;t<this.activeTones[e].count();t++){const n=this.activeTones[e].get(t);this.playTone(this.song,c,l,e,o,V,n,!1,!1)}for(let n=0;n<this.releasedTones[e].count();n++){const s=this.releasedTones[e].get(n);if(s.ticksSinceReleased>=s.instrument.getTransition().releaseTicks){this.freeReleasedTone(e,n),n--;continue}const i=n+this.activeTones[e].count()>=t.Config.maximumTonesPerChannel;this.playTone(this.song,c,l,e,o,V,s,!0,i)}}let U=D+w-k*Math.sin(B+0),W=D+M-k*Math.sin(B+2.1),$=D+x-k*Math.sin(B+4.2),j=D+1024+C-k*Math.sin(B+3.2),K=D+1024+S-k*Math.sin(B+5.3),G=D+1024+F-k*Math.sin(B+1);B+=v*V;const Q=(D+V+w-k*Math.sin(B+0)-U)/V,_=(D+V+M-k*Math.sin(B+2.1)-W)/V,q=(D+V+x-k*Math.sin(B+4.2)-$)/V,J=(D+V+1024+C-k*Math.sin(B+3.2)-j)/V,H=(D+V+1024+S-k*Math.sin(B+5.3)-K)/V,Z=(D+V+1024+F-k*Math.sin(B+1)-G)/V,X=r+V;for(let t=r;t<X;t++){const s=c,i=c+1,a=m[s];m[s]=0;const o=m[i];m[i]=0;const r=d[s];d[s]=0;const h=d[i];d[i]=0;const l=p[s];p[s]=0;const f=p[i];p[i]=0;const v=u[s];u[s]=0;const k=u[i];u[i]=0,c+=2;const w=l+v,M=f+k,x=U%1,C=W%1,S=$%1,F=j%1,B=K%1,O=G%1,V=b[2047&U],X=b[U+1&2047],Y=b[2047&W],tt=b[W+1&2047],et=b[2047&$],nt=b[$+1&2047],st=b[2047&j],it=b[j+1&2047],at=b[2047&K],ot=b[K+1&2047],rt=b[2047&G],ht=.5*(w-(V+(X-V)*x)+(Y+(tt-Y)*C)-(et+(nt-et)*S)),lt=.5*(M-(st+(it-st)*F)+(at+(ot-at)*B)-(rt+(b[G+1&2047]-rt)*O));b[D]=w,b[D+1024&2047]=M,D=D+1&2047,U+=Q,W+=_,$+=q,j+=J,K+=H,G+=Z;const ct=E+3041&16383,mt=E+6426&16383,dt=E+10907&16383,pt=g[E],ut=g[ct],ft=g[mt],yt=g[dt],bt=-(pt+v+r)+ut,gt=-(pt+k+h)-ut,vt=-ft+yt,kt=-ft-yt;P+=.5*((bt+vt)*L-P),A+=.5*((gt+kt)*L-A),N+=.5*((bt-vt)*L-N),T+=.5*((gt-kt)*L-T),g[ct]=P,g[mt]=A,g[dt]=N,g[E]=T,E=E+1&16383;const wt=a+ht+r+ut+ft+yt,Mt=o+lt+h+pt+ft-yt,xt=wt<0?-wt:wt,Ct=Mt<0?-Mt:Mt,St=xt>Ct?xt:Ct,Ft=y/((R+=(St-R)*(R<St?z:I))>=1?1.05*R:.8*R+.25);e[t]=wt*Ft,n[t]=Mt*Ft}if(r+=V,this.tickSampleCountdown-=V,this.tickSampleCountdown<=0){for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let n=0;n<this.releasedTones[e].count();n++){this.releasedTones[e].get(n).ticksSinceReleased++,n+this.activeTones[e].count()>=t.Config.maximumTonesPerChannel&&(this.freeReleasedTone(e,n),n--)}if(this.tick++,this.tickSampleCountdown=o,this.tick==t.Config.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let n=0;n<this.activeTones[e].count();n++){const s=this.activeTones[e].get(n),i=s.instrument.getTransition();i.isSeamless||null==s.note||s.note.end!=this.part+this.beat*t.Config.partsPerBeat||(i.releases?this.releaseTone(e,s):this.freeTone(s),this.activeTones[e].remove(n),n--)}for(let e=0;e<this.song.modChannelCount;e++)for(let n=0;n<t.Config.modCount;n++)for(let s=0;s<this.activeModTones[e][n].count();s++){const i=this.activeModTones[e][n].get(s);i.instrument.getTransition().isSeamless||null==i.note||i.note.end!=this.part+this.beat*t.Config.partsPerBeat||(this.freeTone(i),this.activeModTones[e][n].remove(s),s--)}this.part==t.Config.partsPerBeat&&(this.part=0,i&&(this.beat++,this.beat==this.song.beatsPerBar&&(this.beat=0,this.bar++,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(h=!0,this.resetEffects(),this.pause())))))}}for(let t=0;t<f.mstMaxValue;t++)null!=this.nextModValues&&null!=this.nextModValues[t]&&(this.modValues[t]=this.nextModValues[t]);this.isModActive(f.mstTempo,!0)&&(o=this.getSamplesPerTick());for(let t=0;t<f.mstMaxValue;t++)for(let e=0;e<a;e++)for(let n=0;n<this.song.instrumentsPerChannel;n++)null!=this.nextModInsValues&&null!=this.nextModInsValues[e]&&null!=this.nextModInsValues[e][n]&&null!=this.nextModInsValues[e][n][t]&&(this.modInsValues[e][n][t]=this.nextModInsValues[e][n][t])}-1e-24<P&&P<1e-24&&(P=0),-1e-24<A&&A<1e-24&&(A=0),-1e-24<N&&N<1e-24&&(N=0),-1e-24<T&&T<1e-24&&(T=0),-1e-24<R&&R<1e-24&&(R=0),this.stereoBufferIndex=(this.stereoBufferIndex+2*s)%l,this.chorusPhase=B,this.chorusDelayPos=D,this.reverbDelayPos=E,this.reverbFeedback0=P,this.reverbFeedback1=A,this.reverbFeedback2=N,this.reverbFeedback3=T,this.limit=R,i&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/o)/2+this.part)/t.Config.partsPerBeat+this.beat)/this.song.beatsPerBar+this.bar)}freeTone(t){this.tonePool.pushBack(t)}newTone(){if(this.tonePool.count()>0){const t=this.tonePool.popBack();return t.reset(),t.active=!1,t}return new g}releaseTone(t,e){null!=this.song&&this.song.getChannelIsMod(t)||this.releasedTones[t].pushFront(e)}freeReleasedTone(t,e){null!=this.song&&this.song.getChannelIsMod(t)||(this.freeTone(this.releasedTones[t].get(e)),this.releasedTones[t].remove(e))}freeAllTones(){for(;this.liveInputTones.count()>0;)this.freeTone(this.liveInputTones.popBack());for(let t=0;t<this.activeTones.length;t++)for(;this.activeTones[t].count()>0;)this.freeTone(this.activeTones[t].popBack());for(let t=0;t<this.releasedTones.length;t++)for(;this.releasedTones[t].count()>0;)this.freeTone(this.releasedTones[t].popBack());for(let t=0;t<this.activeModTones.length;t++)for(let e=0;e<this.activeModTones[t].length;e++)for(;this.activeModTones[t][e].count()>0;)this.freeTone(this.activeModTones[t][e].popBack())}determineLiveInputTones(t){const e=this.liveInputTones,n=this.liveInputPitches;let s=0;if(this.liveInputDuration>0){const i=t.channels[this.liveInputChannel].instruments[t.getPatternInstrument(this.liveInputChannel,this.bar)];if(i.getChord().arpeggiates){let t;0==e.count()?(t=this.newTone(),e.pushBack(t)):!i.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.popFront()),t=this.newTone(),e.pushBack(t)):t=e.get(0),s=1;for(let e=0;e<n.length;e++)t.pitches[e]=n[e];t.pitchCount=n.length,t.chordSize=1,t.instrument=i,t.note=t.prevNote=t.nextNote=null}else for(let t=0;t<n.length;t++){let a;e.count()<=t?(a=this.newTone(),e.pushBack(a)):!i.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.get(t)),a=this.newTone(),e.set(t,a)):a=e.get(t),s++,a.pitches[0]=n[t],a.pitchCount=1,a.chordSize=n.length,a.instrument=i,a.note=a.prevNote=a.nextNote=null}}for(;e.count()>s;)this.releaseTone(this.liveInputChannel,e.popBack());this.liveInputStarted=!1}determineCurrentActiveTones(e,n,s){const i=e.channels[n].instruments[e.getPatternInstrument(n,this.bar)],a=e.getPattern(n,this.bar),o=this.part+this.beat*t.Config.partsPerBeat;if(s&&e.getChannelIsMod(n)&&!e.channels[n].muted){let s=n-(e.pitchChannelCount+e.noiseChannelCount),r=[],h=[],l=[],c=t.Config.modCount;for(;c--;)r.push(null),h.push(null),l.push(null);if(null!=a)for(let t=0;t<a.notes.length;t++)a.notes[t].end<=o?(null==h[a.notes[t].pitches[0]]||a.notes[t].end>h[a.notes[t].pitches[0]].start)&&(h[a.notes[t].pitches[0]]=a.notes[t]):a.notes[t].start<=o&&a.notes[t].end>o?r[a.notes[t].pitches[0]]=a.notes[t]:a.notes[t].start>o&&(null==l[a.notes[t].pitches[0]]||a.notes[t].start<l[a.notes[t].pitches[0]].start)&&(l[a.notes[t].pitches[0]]=a.notes[t]);for(let e=0;e<t.Config.modCount;e++){const t=this.activeModTones[s][e];if(null!=r[e])null!=h[e]&&h[e].end!=r[e].start&&(h[e]=null),null!=l[e]&&l[e].start!=r[e].end&&(l[e]=null),this.syncTones(n,t,i,r[e].pitches,r[e],h[e],l[e],o);else for(;t.count()>0;)t.peakBack().instrument.getTransition().releases?this.releaseTone(n,t.popBack()):this.freeTone(t.popBack())}}else if(!e.getChannelIsMod(n)){let t=null,r=null,h=null;if(s&&null!=a&&!e.channels[n].muted)for(let e=0;e<a.notes.length;e++)if(a.notes[e].end<=o)r=a.notes[e];else if(a.notes[e].start<=o&&a.notes[e].end>o)t=a.notes[e];else if(a.notes[e].start>o){h=a.notes[e];break}const l=this.activeTones[n];if(null!=t)null!=r&&r.end!=t.start&&(r=null),null!=h&&h.start!=t.end&&(h=null),this.syncTones(n,l,i,t.pitches,t,r,h,o);else for(;l.count()>0;)l.peakBack().instrument.getTransition().releases?this.releaseTone(n,l.popBack()):this.freeTone(l.popBack())}}syncTones(e,n,s,i,a,o,r,h){let l=0;if(s.getChord().arpeggiates){let t;0==n.count()?(t=this.newTone(),n.pushBack(t)):t=n.get(0),l=1;for(let e=0;e<i.length;e++)t.pitches[e]=i[e];t.pitchCount=i.length,t.chordSize=1,t.instrument=s,t.note=a,t.noteStart=a.start,t.noteEnd=a.end,t.prevNote=o,t.nextNote=r,t.prevNotePitchIndex=0,t.nextNotePitchIndex=0}else{const e=s.getTransition();for(let c=0;c<i.length;c++){const i=c*s.getChord().strumParts;let m=o&&o.pitches.length>c?o:null,d=a,p=r&&r.pitches.length>c?r:null,u=d.start+i;if(u>h){if(!(n.count()>c&&e.isSeamless&&null!=m))break;p=d,d=m,m=null,u=d.start+i}let f,y=d.end;e.isSeamless&&null!=p&&(y=Math.min(t.Config.partsPerBeat*this.song.beatsPerBar,y+i)),n.count()<=c?(f=this.newTone(),n.pushBack(f)):f=n.get(c),l++,f.pitches[0]=d.pitches[c],f.pitchCount=1,f.chordSize=d.pitches.length,f.instrument=s,f.note=d,f.noteStart=u,f.noteEnd=y,f.prevNote=m,f.nextNote=p,f.prevNotePitchIndex=c,f.nextNotePitchIndex=c}}for(;n.count()>l;)n.peakBack().instrument.getTransition().releases?this.releaseTone(e,n.popBack()):this.freeTone(n.popBack())}playTone(t,e,n,s,i,a,o,r,h){let l;switch(v.computeTone(this,t,s,i,a,o,r,h),o.instrument.effects){case 0:l=this.samplesForNone;break;case 1:l=this.samplesForReverb;break;case 2:l=this.samplesForChorus;break;case 3:l=this.samplesForChorusReverb;break;default:throw new Error}v.getInstrumentSynthFunction(o.instrument)(this,l,e,n,2*a,o,o.instrument)}static computeEnvelope(t,e,n,s){switch(t.type){case 0:return s;case 1:return 1;case 4:return 1/(1+e*t.speed);case 5:return 1-1/(1+e*t.speed);case 6:return.5-.5*Math.cos(2*n*Math.PI*t.speed);case 7:return.75-.25*Math.cos(2*n*Math.PI*t.speed);case 2:return Math.max(1,2-10*e);case 3:const i=t.speed,a=.25/Math.sqrt(i);return e<a?e/a:1/(1+(e-a)*i);case 8:return Math.pow(2,-t.speed*e);default:throw new Error("Unrecognized operator envelope type.")}}static computeChordVolume(t){return 1/(.25*(t-1)+1)}static computeTone(e,n,s,i,a,o,r,h){const l=o.instrument,c=l.getTransition(),m=l.getChord(),d=m.arpeggiates?1:v.computeChordVolume(o.chordSize),u=n.getChannelIsNoise(s),y=u?t.Config.noiseInterval:1,b=t.Config.ticksPerPart*i/e.samplesPerSecond,g=1/t.Config.partsPerBeat,k=o.active,w=e.tickSampleCountdown,M=1-w/i,x=1-(w-a)/i,C=(e.beat*t.Config.partsPerBeat+e.part)*t.Config.ticksPerPart+e.tick,S=C/t.Config.ticksPerPart,F=(C+1)/t.Config.ticksPerPart,B=S+(F-S)*M,D=S+(F-S)*x,E=e.song.channels[s].instruments.findIndex(t=>t==l);o.phaseDeltaScale=0,o.filter=1,o.filterScale=1,o.vibratoScale=0,o.intervalMult=1,o.intervalVolumeMult=1,o.active=!1;let P=l.pan,A=l.pan;e.isModActive(f.mstPan,!1,s,E)&&(P=e.getModValue(f.mstPan,!1,s,E,!1),A=e.getModValue(f.mstPan,!1,s,E,!0));const N=(P-t.Config.panCenter)/t.Config.panCenter,T=(A-t.Config.panCenter)/t.Config.panCenter,O=.0013*e.samplesPerSecond;o.stereoDelayStart=-N*O;const L=-T*O;o.stereoDelayDelta=(L-o.stereoDelayStart)/a,o.stereoVolumeLStart=1.414*Math.cos((1+N)*Math.PI*.25),o.stereoVolumeRStart=1.414*Math.cos((1-N)*Math.PI*.25);const I=1.414*Math.cos((1+T)*Math.PI*.25),z=1.414*Math.cos((1-T)*Math.PI*.25);o.stereoVolumeLDelta=(I-o.stereoVolumeLStart)/a,o.stereoVolumeRDelta=(z-o.stereoVolumeRStart)/a;let R,V,U,W,$=!0,j=0,K=0,G=0,Q=1,_=1,q=d,J=d,H=0,Z=0,X=0,Y=0;if(3==l.type)u?(V=t.Config.spectrumBasePitch,U=.6):(V=t.Config.keys[n.key].basePitch,U=.3),R=t.Config.spectrumBasePitch,W=28;else if(4==l.type)U=.45,R=V=t.Config.spectrumBasePitch,W=48;else if(2==l.type)U=.19,R=V=t.Config.chipNoises[l.chipNoise].basePitch,W=t.Config.chipNoises[l.chipNoise].isSoft?24:60;else if(1==l.type)V=t.Config.keys[n.key].basePitch,U=.03,R=16,W=48;else if(0==l.type||7==l.type)V=t.Config.keys[n.key].basePitch,U=.03375,R=16,W=48;else if(5==l.type)V=t.Config.keys[n.key].basePitch,U=.025,R=16,W=48;else if(6==l.type)V=t.Config.keys[n.key].basePitch,U=.04725,R=16,W=48;else{if(8!=l.type)throw new Error("Unknown instrument type in computeTone.");U=1,R=0,W=1,V=0}for(let e=0;e<t.Config.operatorCount;e++)o.phaseDeltas[e]=0,o.volumeStarts[e]=0,o.volumeDeltas[e]=0;if(r){const e=o.noteLengthTicks+o.ticksSinceReleased,n=o.ticksSinceReleased+M,s=o.ticksSinceReleased+x,i=o.noteLengthTicks+n,a=o.noteLengthTicks+s,r=o.instrument.getTransition();$=!1,j=Math.floor(e/t.Config.ticksPerPart),K=G=o.lastInterval,H=Z=v.expressionToVolumeMult(o.lastVolume),Q=v.expressionToVolumeMult(6*(1-n/r.releaseTicks)),_=v.expressionToVolumeMult(6*(1-s/r.releaseTicks)),X=i/t.Config.ticksPerPart,Y=a/t.Config.ticksPerPart,h&&(Q*=1-M,_*=1-x)}else if(null==o.note){Q=_=1,H=Z=1,o.lastInterval=0,o.lastVolume=6,o.ticksSinceReleased=0,$=!1;const e=o.liveInputSamplesHeld/i;o.liveInputSamplesHeld+=a;const n=o.liveInputSamplesHeld/i;o.noteLengthTicks=n;const s=e/t.Config.ticksPerPart,r=n/t.Config.ticksPerPart;j=Math.floor(s),X=s,Y=r}else{const s=o.note,i=o.prevNote,a=o.nextNote,r=e.part+e.beat*t.Config.partsPerBeat,h=t.Config.partsPerBeat*n.beatsPerBar,p=o.noteStart,u=o.noteEnd;let f;for(j=r-p,f=1;f<s.pins.length-1&&!(s.pins[f].time+s.start>r);f++);const y=s.pins[f-1],b=s.pins[f],g=p*t.Config.ticksPerPart,w=u*t.Config.ticksPerPart-g,C=(s.start+y.time)*t.Config.ticksPerPart,B=(s.start+b.time)*t.Config.ticksPerPart;o.lastInterval=s.pins[s.pins.length-1].interval,o.lastVolume=s.pins[s.pins.length-1].volume,o.ticksSinceReleased=0,o.noteLengthTicks=w;const D=r*t.Config.ticksPerPart+e.tick,E=r*t.Config.ticksPerPart+e.tick+1,P=D-g,A=E-g,N=Math.min(1,(D-C)/(B-C)),T=Math.min(1,(E-C)/(B-C));let O=y.volume+(b.volume-y.volume)*N,L=y.volume+(b.volume-y.volume)*T,I=1,z=1,R=d,V=d,U=y.interval+(b.interval-y.interval)*N,W=y.interval+(b.interval-y.interval)*T,tt=S-p,et=F-p;$=D+M-g==0||!k;const nt=.5*w;if(c.isSeamless&&!c.slides&&0==s.start)$=!k;else if(c.isSeamless&&null!=i&&($=!k,c.slides)){const t=Math.min(nt,c.slideTicks),e=Math.max(0,1-P/t),n=Math.max(0,1-A/t),a=.5*(i.pitches[o.prevNotePitchIndex]+i.pins[i.pins.length-1].interval-o.pitches[0]),r=.5*(i.pins[i.pins.length-1].volume-s.pins[0].volume),h=.5*(i.end-i.start);if(U+=e*a,W+=n*a,O+=e*r,L+=n*r,tt+=e*h,et+=n*h,!m.arpeggiates){const t=.5*(i.pitches.length-o.chordSize);R=v.computeChordVolume(o.chordSize+e*t),V=v.computeChordVolume(o.chordSize+n*t)}}if(c.isSeamless&&!c.slides&&s.end==h);else if(c.isSeamless&&null!=a){if(c.slides){const t=Math.min(nt,c.slideTicks),e=Math.max(0,1-(w-P)/t),n=Math.max(0,1-(w-A)/t),i=.5*(a.pitches[o.nextNotePitchIndex]-(o.pitches[0]+s.pins[s.pins.length-1].interval)),r=.5*(a.pins[0].volume-s.pins[s.pins.length-1].volume),h=.5*-(u-p);if(U+=e*i,W+=n*i,O+=e*r,L+=n*r,tt+=e*h,et+=n*h,!m.arpeggiates){const t=.5*(a.pitches.length-o.chordSize);R=v.computeChordVolume(o.chordSize+e*t),V=v.computeChordVolume(o.chordSize+n*t)}}}else if(!c.releases){const t=c.releaseTicks;t>0&&(I*=Math.min(1,(w-P)/t),z*=Math.min(1,(w-A)/t))}K=U+(W-U)*M,G=U+(W-U)*x,8!=l.type?(H=v.expressionToVolumeMult(O+(L-O)*M),Z=v.expressionToVolumeMult(O+(L-O)*x)):(H=O+(L-O)*M,Z=O+(L-O)*x,o.customVolumeStart=H,o.customVolumeEnd=Z),Q=I+(z-I)*M,_=I+(z-I)*x,q=R+(V-R)*M,J=R+(V-R)*x,X=tt+(et-tt)*M,Y=tt+(et-tt)*x}const tt=1/e.samplesPerSecond;if(o.active=!0,0==l.type||1==l.type||5==l.type||6==l.type||7==l.type){const n=v.getLFOAmplitude(l,b*B),i=v.getLFOAmplitude(l,b*D);let a=t.Config.vibratos[l.vibrato].amplitude,o=t.Config.vibratos[l.vibrato].amplitude;e.isModActive(f.mstVibratoDepth,!1,s,E)&&(a=e.getModValue(f.mstVibratoDepth,!1,s,E,!1)/25,o=e.getModValue(f.mstVibratoDepth,!1,s,E,!0)/25),K+=(j<t.Config.vibratos[l.vibrato].delayParts?0:a)*n,G+=(j<t.Config.vibratos[l.vibrato].delayParts?0:o)*i}if(!c.isSeamless||(c.slides||null==o.note||0!=o.note.start)&&null==o.prevNote){const t=c.attackSeconds;t>0&&(Q*=Math.min(1,b*X/t),_*=Math.min(1,b*Y/t))}const et=v.instrumentVolumeToVolumeMult(l.volume);4==l.type&&(o.drumsetPitch=o.pitches[0],null!=o.note&&(o.drumsetPitch+=o.note.pickMainInterval()),o.drumsetPitch=Math.max(0,Math.min(t.Config.drumCount-1,o.drumsetPitch)));let nt,st,it=l.filterCutoff,at=l.filterCutoff;e.isModActive(f.mstFilterCut,!1,s,E)&&(it=n.modValueToReal(e.getModValue(f.mstFilterCut,!1,s,E,!1),f.mstFilterCut),at=n.modValueToReal(e.getModValue(f.mstFilterCut,!1,s,E,!0),f.mstFilterCut)),4==l.type?(nt=0,st=0):(nt=.5*(it-(t.Config.filterCutoffRange-1)),st=.5*(at-(t.Config.filterCutoffRange-1)));const ot=4==l.type?l.getDrumsetEnvelope(o.drumsetPitch):l.getFilterEnvelope(),rt=t.Config.filterCutoffMaxHz*Math.pow(2,nt),ht=t.Config.filterCutoffMaxHz*Math.pow(2,st),lt=2*Math.sin(Math.PI*rt/e.samplesPerSecond),ct=2*Math.sin(Math.PI*ht/e.samplesPerSecond),mt=2*Math.sin(Math.PI*t.Config.filterCutoffMinHz/e.samplesPerSecond);o.filter=lt*v.computeEnvelope(ot,b*X,g*B,H);let dt=ct*v.computeEnvelope(ot,b*Y,g*D,Z);o.filter=Math.min(t.Config.filterMax,Math.max(mt,o.filter)),dt=Math.min(t.Config.filterMax,Math.max(mt,dt)),o.filterScale=Math.pow(dt/o.filter,1/a);let pt=Math.pow(.5,.35*nt),ut=Math.pow(.5,.35*st);o.filterResonanceStart=l.getFilterResonance(),o.filterResonanceDelta=0;let ft=l.filterResonance,yt=l.filterResonance;if(o.isFirstOrder=4!=l.type&&0==ft,e.isModActive(f.mstFilterPeak,!1,s,E)){o.isFirstOrder=!1,ft=n.modValueToReal(e.getModValue(f.mstFilterPeak,!1,s,E,!1),f.mstFilterPeak),yt=n.modValueToReal(e.getModValue(f.mstFilterPeak,!1,s,E,!0),f.mstFilterPeak),o.filterResonanceStart=t.Config.filterMaxResonance*Math.pow(Math.max(0,ft-1)/(t.Config.filterResonanceRange-2),.5);const i=t.Config.filterMaxResonance*Math.pow(Math.max(0,yt-1)/(t.Config.filterResonanceRange-2),.5);o.filterResonanceDelta=(i-o.filterResonanceStart)/a}else o.filterResonanceStart=t.Config.filterMaxResonance*Math.pow(Math.max(0,ft-1)/(t.Config.filterResonanceRange-2),.5);if(0==o.isFirstOrder&&(pt=Math.pow(pt,1.7)*Math.pow(.5,.125*(ft-1)),ut=Math.pow(ut,1.7)*Math.pow(.5,.125*(yt-1))),8==ot.type?(pt*=1.25+.025*ot.speed,ut*=1.25+.025*ot.speed):4==ot.type&&(pt*=1+.02*ot.speed,ut*=1+.02*ot.speed),$&&o.reset(),1==l.type){let i=1,r=1,h=0,c=0,d=0;if(o.pitchCount>1&&!m.harmonizes){const s=Math.floor((e.tick+e.part*t.Config.ticksPerPart)/t.Config.rhythms[n.rhythm].ticksPerArpeggio);d=o.pitches[t.getArpeggioPitchIndex(o.pitchCount,n.rhythm,s)]-o.pitches[0]}let u=l.detune/25,k=l.detune/25;e.isModActive(f.mstDetune,!1,s,E)&&(u=e.getModValue(f.mstDetune,!1,s,E,!1)/25,k=e.getModValue(f.mstDetune,!1,s,E,!0)/25),e.isModActive(f.mstSongDetune,!0)&&(u+=e.getModValue(f.mstSongDetune,!0,null,null,!1)/25,k+=e.getModValue(f.mstSongDetune,!0,null,null,!0)/25);const w=t.Config.algorithms[l.algorithm].carrierCount;for(let n=0;n<t.Config.operatorCount;n++){const M=t.Config.algorithms[l.algorithm].associatedCarrier[n]-1,x=o.pitches[m.harmonizes?n<o.pitchCount?n:M<o.pitchCount?M:0:0],C=t.Config.operatorFrequencies[l.operators[n].frequency].mult,S=t.Config.operatorCarrierInterval[M]+d,F=V+(x+K+u)*y+S,P=C*p.frequencyFromPitch(F)+t.Config.operatorFrequencies[l.operators[n].frequency].hzOffset;o.phaseDeltas[n]=P*tt*t.Config.sineWaveLength;let A=l.operators[n].amplitude,N=l.operators[n].amplitude;e.isModActive(f.mstFMSlider1+n,!1,s,E)&&(A*=e.getModValue(f.mstFMSlider1+n,!1,s,E,!1)/15,N*=e.getModValue(f.mstFMSlider1+n,!1,s,E,!0)/15);const T=v.operatorAmplitudeCurve(A),O=v.operatorAmplitudeCurve(N);let L=T*t.Config.operatorFrequencies[l.operators[n].frequency].amplitudeSign,I=O*t.Config.operatorFrequencies[l.operators[n].frequency].amplitudeSign;if(e.isModActive(f.mstInsVolume,!1,s,E)){const n=e.getModValue(f.mstInsVolume,!1,s,E,!1),i=e.getModValue(f.mstInsVolume,!1,s,E,!0);L*=n<=0?(n+t.Config.volumeRange/2)/(t.Config.volumeRange/2):this.instrumentVolumeToVolumeMult(n),I*=i<=0?(i+t.Config.volumeRange/2)/(t.Config.volumeRange/2):this.instrumentVolumeToVolumeMult(i)}if(e.isModActive(f.mstSongVolume,!0)&&(L*=e.getModValue(f.mstSongVolume,!0,void 0,void 0,!1)/100,I*=e.getModValue(f.mstSongVolume,!0,void 0,void 0,!0)/100),n<w){const t=V+(x+G+k)*y+S,e=Math.pow(2,-(F-R)/W),n=Math.pow(2,-(t-R)/W);L*=e,I*=n,h+=T,c+=O}else L*=1.5*t.Config.sineWaveLength,I*=1.5*t.Config.sineWaveLength,i*=1-Math.min(1,A/15),r*=1-Math.min(1,N/15);const z=t.Config.envelopes[l.operators[n].envelope];L*=v.computeEnvelope(z,b*X,g*B,H),I*=v.computeEnvelope(z,b*Y,g*D,Z),o.volumeStarts[n]=L,o.volumeDeltas[n]=(I-L)/a}let M=l.feedbackAmplitude,x=l.feedbackAmplitude;e.isModActive(f.mstFMFeedback,!1,s,E)&&(M*=e.getModValue(f.mstFMFeedback,!1,s,E,!1)/15,x*=e.getModValue(f.mstFMFeedback,!1,s,E,!0)/15);const C=.3*t.Config.sineWaveLength*M/15,S=.3*t.Config.sineWaveLength*x/15,F=t.Config.envelopes[l.feedbackEnvelope];let P=C*v.computeEnvelope(F,b*X,g*B,H),A=S*v.computeEnvelope(F,b*Y,g*D,Z);o.feedbackMult=P,o.feedbackDelta=(A-o.feedbackMult)/a;const N=U*et;o.volumeStart=pt*N*Q*q;const T=ut*N*_*J;o.volumeDelta=(T-o.volumeStart)/a,i*=(Math.pow(2,2-1.4*M/15)-1)/3,r*=(Math.pow(2,2-1.4*x/15)-1)/3,i*=1-Math.min(1,Math.max(0,h-1)/2),r*=1-Math.min(1,Math.max(0,c-1)/2),o.volumeStart*=1+3*i,o.volumeDelta*=1+1.5*(i+r)}else if(8==l.type){o.volumeStart=Q;let t=_;o.volumeStart*=H,t*=Z,o.volumeDelta=(t-o.volumeStart)/a}else{let i=l.detune/25,r=l.detune/25;e.isModActive(f.mstDetune,!1,s,E)&&(i=e.getModValue(f.mstDetune,!1,s,E,!1)/25,r=e.getModValue(f.mstDetune,!1,s,E,!0)/25),e.isModActive(f.mstSongDetune,!0)&&(i+=e.getModValue(f.mstSongDetune,!0,null,null,!1)/25,r+=e.getModValue(f.mstSongDetune,!0,null,null,!0)/25);let h=o.pitches[0];if(o.pitchCount>1){const s=Math.floor((e.tick+e.part*t.Config.ticksPerPart)/t.Config.rhythms[n.rhythm].ticksPerArpeggio);if(m.harmonizes){const e=o.pitches[1+t.getArpeggioPitchIndex(o.pitchCount-1,n.rhythm,s)]-o.pitches[0];o.intervalMult=Math.pow(2,e/12),o.intervalVolumeMult=Math.pow(2,-e/W)}else h=o.pitches[t.getArpeggioPitchIndex(o.pitchCount,n.rhythm,s)]}const c=V+(h+K+i)*y,d=V+(h+G+r)*y,u=p.frequencyFromPitch(c),k=Math.pow(2,-(c-R)/W),w=Math.pow(2,-(d-R)/W);let M=U*pt,x=U*ut;if(2==l.type&&(M*=t.Config.chipNoises[l.chipNoise].volume,x*=t.Config.chipNoises[l.chipNoise].volume),0!=l.type&&7!=l.type||(M*=t.Config.chipWaves[l.chipWave].volume,x*=t.Config.chipWaves[l.chipWave].volume),0!=l.type&&5!=l.type&&7!=l.type||(M*=t.Config.intervals[l.interval].volume,x*=t.Config.intervals[l.interval].volume),6==l.type){let n=l.pulseWidth/(2*t.Config.pulseWidthRange),i=l.pulseWidth/(2*t.Config.pulseWidthRange);e.isModActive(f.mstPulseWidth,!1,s,E)&&(n=e.getModValue(f.mstPulseWidth,!1,s,E,!1)/(2*t.Config.pulseWidthRange),i=e.getModValue(f.mstPulseWidth,!1,s,E,!0)/(2*t.Config.pulseWidthRange));const r=t.Config.envelopes[l.pulseEnvelope],h=n*v.computeEnvelope(r,b*X,g*B,H),c=i*v.computeEnvelope(r,b*Y,g*D,Z);o.pulseWidth=h,o.pulseWidthDelta=(c-h)/a}o.phaseDeltas[0]=u*tt,o.volumeStart=Q*q*k*M*et;let C=_*J*w*x*et;if(0==ot.type||6==l.type&&0==t.Config.envelopes[l.pulseEnvelope].type||(o.volumeStart*=H,C*=Z),e.isModActive(f.mstInsVolume,!1,s,E)){const n=e.getModValue(f.mstInsVolume,!1,s,E,!1),i=e.getModValue(f.mstInsVolume,!1,s,E,!0);o.volumeStart*=n<=0?(n+t.Config.volumeRange/2)/(t.Config.volumeRange/2):this.instrumentVolumeToVolumeMult(n),C*=i<=0?(i+t.Config.volumeRange/2)/(t.Config.volumeRange/2):this.instrumentVolumeToVolumeMult(i)}e.isModActive(f.mstSongVolume,!0)&&(o.volumeStart*=e.getModValue(f.mstSongVolume,!0,void 0,void 0,!1)/100,C*=e.getModValue(f.mstSongVolume,!0,void 0,void 0,!0)/100),o.volumeDelta=(C-o.volumeStart)/a}o.phaseDeltaScale=Math.pow(2,(G-K)*y/12/a)}static getLFOAmplitude(e,n){let s=0;for(const i of t.Config.vibratos[e.vibrato].periodsSeconds)s+=Math.sin(2*Math.PI*n/i);return s}static getInstrumentSynthFunction(e){if(1==e.type){const n=e.algorithm+"_"+e.feedbackType;if(void 0==v.fmSynthFunctionCache[n]){const s=[];for(const n of v.fmSourceTemplate)if(-1!=n.indexOf("// CARRIER OUTPUTS")){const i=[];for(let n=0;n<t.Config.algorithms[e.algorithm].carrierCount;n++)i.push("operator"+n+"Scaled");s.push(n.replace("/*operator#Scaled*/",i.join(" + ")))}else if(-1!=n.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let n=t.Config.operatorCount-1;n>=0;n--)for(const i of v.operatorSourceTemplate)if(-1!=i.indexOf("/* + operator@Scaled*/")){let a="";for(const s of t.Config.algorithms[e.algorithm].modulatedBy[n])a+=" + operator"+(s-1)+"Scaled";const o=t.Config.feedbacks[e.feedbackType].indices[n];if(o.length>0){a+=" + feedbackMult * (";const t=[];for(const e of o)t.push("operator"+(e-1)+"Output");a+=t.join(" + ")+")"}s.push(i.replace(/\#/g,n+"").replace("/* + operator@Scaled*/",a))}else s.push(i.replace(/\#/g,n+""));else if(-1!=n.indexOf("#"))for(let e=0;e<t.Config.operatorCount;e++)s.push(n.replace(/\#/g,e+""));else s.push(n);v.fmSynthFunctionCache[n]=new Function("synth","data","stereoBufferIndex","stereoBufferLength","runLength","tone","instrument",s.join("\n"))}return v.fmSynthFunctionCache[n]}if(0==e.type)return v.chipSynth;if(7==e.type)return v.chipSynth;if(5==e.type)return v.harmonicsSynth;if(6==e.type)return v.pulseWidthSynth;if(2==e.type)return v.noiseSynth;if(3==e.type)return v.spectrumSynth;if(4==e.type)return v.drumsetSynth;if(8==e.type)return v.modSynth;throw new Error("Unrecognized instrument type: "+e.type)}static chipSynth(e,n,s,i,a,o,r){var h,l;7==r.type?(h=r.customChipWaveIntegral,l=.1):(h=t.Config.chipWaves[r.chipWave].samples,l=1);const c=+h.length-1,m=+Math.pow(2,(t.Config.intervals[r.interval].offset+t.Config.intervals[r.interval].spread)/12),d=Math.pow(2,(t.Config.intervals[r.interval].offset-t.Config.intervals[r.interval].spread)/12)*o.intervalMult,p=o.intervalVolumeMult*t.Config.intervals[r.interval].sign;0!=r.interval||r.getChord().customInterval||(o.phases[1]=o.phases[0]);const u=d/m;let f=o.phaseDeltas[0]*m*c,y=f*u;const b=+o.phaseDeltaScale;let g=+o.volumeStart;const v=+o.volumeDelta;let k=o.phases[0]%1*c,w=o.phases[1]%1*c;const M=o.isFirstOrder;let x=+o.filter,C=M?1:x;const S=+o.filterScale,F=M?1:S;let B=o.filterResonanceStart,D=o.filterResonanceDelta,E=+o.filterSample0,P=+o.filterSample1;const A=0|k,N=0|w,T=A%c,O=N%c,L=k-A,I=w-N;let z=h[T],R=h[O];z+=(h[T+1]-z)*L,R+=(h[O+1]-R)*I;const V=s+a;s+=o.stereoOffset;let U,W=o.stereoVolumeLStart,$=o.stereoVolumeLDelta,j=o.stereoVolumeRStart,K=o.stereoVolumeRDelta,G=o.stereoDelayStart,Q=o.stereoDelayDelta;for(;s<V;){const t=0|(k+=f),e=0|(w+=y),a=t%c,o=e%c;let r=h[a],m=h[o];const d=k-t,u=w-e;let M=((r+=(h[a+1]-r)*d)-z)/f,A=((m+=(h[o+1]-m)*u)-R)/y;z=r,R=m,P+=C*((E+=x*(M+A*p-E+(B+B/(1-x))*(E-P)))-P),x*=S,C*=F,f*=b,y*=b,B+=D;const N=P*g*l;g+=v,n[(s+(U=G<0?[0,0,2*(0|-G),-G%1]:[2*(0|G),G%1,0,0])[0])%i]+=N*W*(1-U[1]),n[(s+U[0]+2)%i]+=N*W*U[1],n[(s+U[2]+1)%i]+=N*j*(1-U[3]),n[(s+U[2]+3)%i]+=N*j*U[3],W+=$,j+=K,G+=Q,s+=2}o.phases[0]=k/c,o.phases[1]=w/c;-1e-24<E&&E<1e-24&&(E=0),-1e-24<P&&P<1e-24&&(P=0),o.filterSample0=E,o.filterSample1=P}static harmonicsSynth(e,n,s,i,a,o,r){const h=r.harmonicsWave.getCustomWave(),l=+h.length-1,c=+Math.pow(2,(t.Config.intervals[r.interval].offset+t.Config.intervals[r.interval].spread)/12),m=Math.pow(2,(t.Config.intervals[r.interval].offset-t.Config.intervals[r.interval].spread)/12)*o.intervalMult,d=o.intervalVolumeMult*t.Config.intervals[r.interval].sign;0!=r.interval||r.getChord().customInterval||(o.phases[1]=o.phases[0]);const p=m/c;let u=o.phaseDeltas[0]*c*l,f=u*p;const y=+o.phaseDeltaScale;let b=+o.volumeStart;const g=+o.volumeDelta;let v=o.phases[0]%1*l,k=o.phases[1]%1*l;const w=o.isFirstOrder;let M=+o.filter,x=w?1:M;const C=+o.filterScale,S=w?1:C;let F=o.filterResonanceStart,B=o.filterResonanceDelta,D=+o.filterSample0,E=+o.filterSample1;const P=0|v,A=0|k,N=P%l,T=A%l,O=v-P,L=k-A;let I=h[N],z=h[T];I+=(h[N+1]-I)*O,z+=(h[T+1]-z)*L;const R=s+a;s+=o.stereoOffset;let V,U=o.stereoVolumeLStart,W=o.stereoVolumeLDelta,$=o.stereoVolumeRStart,j=o.stereoVolumeRDelta,K=o.stereoDelayStart,G=o.stereoDelayDelta;for(;s<R;){const t=0|(v+=u),e=0|(k+=f),a=t%l,o=e%l;let r=h[a],c=h[o];const m=v-t,p=k-e;let w=((r+=(h[a+1]-r)*m)-I)/u,P=((c+=(h[o+1]-c)*p)-z)/f;I=r,z=c,E+=x*((D+=M*(w+P*d-D+(F+F/(1-M))*(D-E)))-E),M*=C,x*=S,u*=y,f*=y,F+=B;const A=E*b;b+=g,n[(s+(V=K<0?[0,0,2*(0|-K),-K%1]:[2*(0|K),K%1,0,0])[0])%i]+=A*U*(1-V[1]),n[(s+V[0]+2)%i]+=A*U*V[1],n[(s+V[2]+1)%i]+=A*$*(1-V[3]),n[(s+V[2]+3)%i]+=A*$*V[3],U+=W,$+=j,K+=G,s+=2}o.phases[0]=v/l,o.phases[1]=k/l;-1e-24<D&&D<1e-24&&(D=0),-1e-24<E&&E<1e-24&&(E=0),o.filterSample0=D,o.filterSample1=E}static pulseWidthSynth(t,e,n,s,i,a,o){let r=a.phaseDeltas[0];const h=+a.phaseDeltaScale;let l=+a.volumeStart;const c=+a.volumeDelta;let m=a.phases[0]%1,d=a.pulseWidth;const p=a.pulseWidthDelta,u=a.isFirstOrder;let f=+a.filter,y=u?1:f;const b=+a.filterScale,g=u?1:b;let v=a.filterResonanceStart,k=a.filterResonanceDelta,w=+a.filterSample0,M=+a.filterSample1;const x=n+i;n+=a.stereoOffset;let C,S=a.stereoVolumeLStart,F=a.stereoVolumeLDelta,B=a.stereoVolumeRStart,D=a.stereoVolumeRDelta,E=a.stereoDelayStart,P=a.stereoDelayDelta;for(;n<x;){const t=m%1,i=(m+d)%1;let a=i-t;if(t<r)a+=.5*((A=t/r)+A-A*A-1);else if(t>1-r){a+=.5*((A=(t-1)/r)+A+A*A+1)}if(i<r)a-=.5*((A=i/r)+A-A*A-1);else if(i>1-r){var A;a-=.5*((A=(i-1)/r)+A+A*A+1)}M+=y*((w+=f*(a-w+(v+v/(1-f))*(w-M)))-M),f*=b,y*=g,m+=r,r*=h,d+=p,v+=k;const o=M*l;l+=c,e[(n+(C=E<0?[0,0,2*(0|-E),-E%1]:[2*(0|E),E%1,0,0])[0])%s]+=o*S*(1-C[1]),e[(n+C[0]+2)%s]+=o*S*C[1],e[(n+C[2]+1)%s]+=o*B*(1-C[3]),e[(n+C[2]+3)%s]+=o*B*C[3],S+=F,B+=D,E+=P,n+=2}a.phases[0]=m;-1e-24<w&&w<1e-24&&(w=0),-1e-24<M&&M<1e-24&&(M=0),a.filterSample0=w,a.filterSample1=M}static noiseSynth(e,n,s,i,a,o,r){let h=r.getDrumWave(),l=+o.phaseDeltas[0];const c=+o.phaseDeltaScale;let m=+o.volumeStart;const d=+o.volumeDelta;let p=o.phases[0]%1*t.Config.chipNoiseLength;0==o.phases[0]&&(p=Math.random()*t.Config.chipNoiseLength);let u=+o.sample;const f=o.isFirstOrder;let y=+o.filter,b=f?1:y;const g=+o.filterScale,v=f?1:g;let k=o.filterResonanceStart,w=o.filterResonanceDelta,M=+o.filterSample0,x=+o.filterSample1;const C=Math.min(1,o.phaseDeltas[0]*t.Config.chipNoises[r.chipNoise].pitchFilterMult),S=s+a;s+=o.stereoOffset;let F,B=o.stereoVolumeLStart,D=o.stereoVolumeLDelta,E=o.stereoVolumeRStart,P=o.stereoVolumeRDelta,A=o.stereoDelayStart,N=o.stereoDelayDelta;for(;s<S;){x+=b*((M+=y*((u+=(h[32767&p]-u)*C)-M+(k+k/(1-y))*(M-x)))-x),p+=l,y*=g,b*=v,l*=c,k+=w;const t=x*m;m+=d,n[(s+(F=A<0?[0,0,2*(0|-A),-A%1]:[2*(0|A),A%1,0,0])[0])%i]+=t*B*(1-F[1]),n[(s+F[0]+2)%i]+=t*B*F[1],n[(s+F[2]+1)%i]+=t*E*(1-F[3]),n[(s+F[2]+3)%i]+=t*E*F[3],B+=D,E+=P,A+=N,s+=2}o.phases[0]=p/t.Config.chipNoiseLength,o.sample=u;-1e-24<M&&M<1e-24&&(M=0),-1e-24<x&&x<1e-24&&(x=0),o.filterSample0=M,o.filterSample1=x}static spectrumSynth(e,n,s,i,a,o,r){let h=r.getDrumWave(),l=128*o.phaseDeltas[0];const c=+o.phaseDeltaScale;let m=+o.volumeStart;const d=+o.volumeDelta;let p=+o.sample;const u=o.isFirstOrder;let f=+o.filter,y=u?1:f;const b=+o.filterScale,g=u?1:b;let k=o.filterResonanceStart,w=o.filterResonanceDelta,M=+o.filterSample0,x=+o.filterSample1,C=o.phases[0]%1*t.Config.chipNoiseLength;0==o.phases[0]&&(C=v.findRandomZeroCrossing(h)+l);const S=Math.min(1,l),F=s+a;s+=o.stereoOffset;let B,D=o.stereoVolumeLStart,E=o.stereoVolumeLDelta,P=o.stereoVolumeRStart,A=o.stereoVolumeRDelta,N=o.stereoDelayStart,T=o.stereoDelayDelta;for(;s<F;){const t=0|C,e=32767&t;let a=h[e];const o=C-t;x+=y*((M+=f*((p+=((a+=(h[e+1]-a)*o)-p)*S)-M+(k+k/(1-f))*(M-x)))-x),C+=l,f*=b,y*=g,l*=c,k+=w;const r=x*m;m+=d,n[(s+(B=N<0?[0,0,2*(0|-N),-N%1]:[2*(0|N),N%1,0,0])[0])%i]+=r*D*(1-B[1]),n[(s+B[0]+2)%i]+=r*D*B[1],n[(s+B[2]+1)%i]+=r*P*(1-B[3]),n[(s+B[2]+3)%i]+=r*P*B[3],D+=E,P+=A,N+=T,s+=2}o.phases[0]=C/t.Config.chipNoiseLength,o.sample=p;-1e-24<M&&M<1e-24&&(M=0),-1e-24<x&&x<1e-24&&(x=0),o.filterSample0=M,o.filterSample1=x}static drumsetSynth(e,n,s,i,a,o,r){let h=r.getDrumsetWave(o.drumsetPitch),l=o.phaseDeltas[0]/p.drumsetIndexReferenceDelta(o.drumsetPitch);const c=+o.phaseDeltaScale;let m=+o.volumeStart;const d=+o.volumeDelta;let u=+o.sample;const f=o.isFirstOrder;let y=+o.filter,b=f?1:y;const g=+o.filterScale,k=f?1:g;let w=o.filterResonanceStart,M=o.filterResonanceDelta,x=+o.filterSample0,C=+o.filterSample1,S=o.phases[0]%1*t.Config.chipNoiseLength;0==o.phases[0]&&(S=v.findRandomZeroCrossing(h)+l);const F=s+a;s+=o.stereoOffset;let B,D=o.stereoVolumeLStart,E=o.stereoVolumeLDelta,P=o.stereoVolumeRStart,A=o.stereoVolumeRDelta,N=o.stereoDelayStart,T=o.stereoDelayDelta;for(;s<F;){const t=0|S,e=32767&t;u=h[e];const a=S-t;C+=b*((x+=y*((u+=(h[e+1]-u)*a)-x+(w+w/(1-y))*(x-C)))-C),S+=l,y*=g,b*=k,l*=c,w+=M;const o=C*m;m+=d,n[(s+(B=N<0?[0,0,2*(0|-N),-N%1]:[2*(0|N),N%1,0,0])[0])%i]+=o*D*(1-B[1]),n[(s+B[0]+2)%i]+=o*D*B[1],n[(s+B[2]+1)%i]+=o*P*(1-B[3]),n[(s+B[2]+3)%i]+=o*P*B[3],D+=E,P+=A,N+=T,s+=2}o.phases[0]=S/t.Config.chipNoiseLength,o.sample=u;-1e-24<x&&x<1e-24&&(x=0),-1e-24<C&&C<1e-24&&(C=0),o.filterSample0=x,o.filterSample1=C}static modSynth(e,n,s,i,a,o,r){if(!e.song)return;let h=t.Config.modCount-1-o.pitches[0],l=r.modSettings[h];e.setModValue(o.customVolumeStart,o.customVolumeEnd,h,r,l),l==f.mstNextBar&&e.skipBar()}static findRandomZeroCrossing(e){let n=Math.random()*t.Config.chipNoiseLength,s=32767&n,i=e[s];for(let a=128;a>0;a--){const a=s+16&32767,o=e[a];if(i*o<=0){for(let a=0;a<16;a++){const a=s+1&32767,o=e[a];if(i*o<=0){const e=o-i;n=s,Math.abs(e)>1e-8&&(n+=-i/e),n=Math.max(0,n)%t.Config.chipNoiseLength;break}s=a,i=o}break}s=a,i=o}return n}static instrumentVolumeToVolumeMult(e){return e==-t.Config.volumeRange/2?0:Math.pow(2,t.Config.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-t.Config.volumeRange/2:Math.min(t.Config.volumeRange,Math.log(e)/Math.LN2/t.Config.volumeLogScale)}static expressionToVolumeMult(t){return Math.pow(Math.max(0,t)/6,1.5)}static volumeMultToExpression(t){return 6*Math.pow(Math.max(0,t),1/1.5)}getSamplesPerTick(){if(null==this.song)return 0;let t=this.song.getBeatsPerMinute();return this.isModActive(f.mstTempo,!0)&&(t=this.getModValue(f.mstTempo,!0)),this.getSamplesPerTickSpecificBPM(t)}getSamplesPerTickSpecificBPM(e){const n=e/60*t.Config.partsPerBeat*t.Config.ticksPerPart;return Math.floor(this.samplesPerSecond/n)}}v.fmSynthFunctionCache={},v.fmSourceTemplate=("\n\t\t\tconst sineWave = beepbox.Config.sineWave;\n\t\t\t\n\t\t\tlet phaseDeltaScale = +tone.phaseDeltaScale;\n\t\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\n\t\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#];\n\t\t\tlet operator#OutputMult  = +tone.volumeStarts[#];\n\t\t\tconst operator#OutputDelta = +tone.volumeDeltas[#];\n\t\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n\t\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\t\tconst feedbackDelta        = +tone.feedbackDelta;\n\t\t\tlet volume = +tone.volumeStart;\n\t\t\tconst volumeDelta = +tone.volumeDelta;\n\t\t\t\n\t\t\tconst isFirstOrder = tone.isFirstOrder;\n\t\t\tlet filter1 = +tone.filter;\n\t\t\tlet filter2 = isFirstOrder ? 1.0 : filter1;\n\t\t\tconst filterScale1 = +tone.filterScale;\n\t\t\tconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\n\t\t\tlet filterResonance = tone.filterResonanceStart;\n\t\t\tlet filterResonanceDelta = tone.filterResonanceDelta;\n\t\t\tlet filterSample0 = +tone.filterSample0;\n\t\t\tlet filterSample1 = +tone.filterSample1;\n\t\t\t\n\t\t\tconst stopIndex = stereoBufferIndex + runLength;\n\t\t\tstereoBufferIndex += tone.stereoOffset;\n\t\t\tlet stereoVolumeL = tone.stereoVolumeLStart;\n\t\t\tlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\n\t\t\tlet stereoVolumeR = tone.stereoVolumeRStart;\n\t\t\tlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\n\t\t\tlet stereoDelay = tone.stereoDelayStart;\n\t\t\tlet stereoDelayDelta = tone.stereoDelayDelta;\n\t\t\tlet delays = [];\n\t\t\twhile (stereoBufferIndex < stopIndex) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\t\tconst feedback = filterResonance + filterResonance / (1.0 - filter1);\n\t\t\t\tfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\n\t\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\t\toperator#PhaseDelta *= phaseDeltaScale;\n\t\t\t\tfilter1 *= filterScale1;\n\t\t\t\tfilter2 *= filterScale2;\n\t\t\t\tfilterResonance += filterResonanceDelta;\n\t\t\t\t\n\t\t\t\tconst output = filterSample1 * volume;\n\t\t\t\tvolume += volumeDelta;\n\n\t\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\n\t\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\n\t\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\n\n\t\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\n\n\t\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\n\t\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\n\n\t\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\n\t\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\n\t\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\n\t\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\n\n\t\t\t\tstereoVolumeL += stereoVolumeLDelta;\n\t\t\t\tstereoVolumeR += stereoVolumeRDelta;\n\t\t\t\tstereoDelay += stereoDelayDelta;\n\n\t\t\t\tstereoBufferIndex += 2;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+t.Config.sineWaveLength+";\n\t\t\ttone.feedbackOutputs[#] = operator#Output;\n\t\t\t\n\t\t\tconst epsilon = (1.0e-24);\n\t\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\n\t\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\n\t\t\ttone.filterSample0 = filterSample0;\n\t\t\ttone.filterSample1 = filterSample1;\n\t\t").split("\n"),v.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+t.Config.sineWaveMask+";\n\t\t\t\tconst operator#Sample   = sineWave[operator#Index];\n\t\t\t\toperator#Output       = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),t.Synth=v}(beepbox||(beepbox={})),function(t){const{a:e,button:n,div:s,h1:i,input:a}=t.HTML,{svg:o,circle:r,rect:h,path:l}=t.SVG;document.head.appendChild(t.HTML.style({type:"text/css"},`\n\t\tbody {\n\t\t\tcolor: ${t.ColorConfig.primaryText};\n\t\t\tbackground: ${t.ColorConfig.editorBackground};\n\t\t}\n\t\th1 {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 14px;\n\t\t\tline-height: 22px;\n\t\t\ttext-align: initial;\n\t\t\tmargin: 0;\n\t\t}\n\t\ta {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 12px;\n\t\t\tline-height: 22px;\n\t\t\twhite-space: nowrap;\n\t\t\tcolor: ${t.ColorConfig.linkAccent};\n\t\t}\n\t\tbutton {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tposition: relative;\n\t\t\tborder: none;\n\t\t\tborder-radius: 5px;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t\tcolor: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 14px;\n\t\t\tfont-family: inherit;\n\t\t}\n\t\tbutton:hover, button:focus {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\t.playButton, .pauseButton {\n\t\t\tpadding-left: 24px;\n\t\t\tpadding-right: 6px;\n\t\t}\n\t\t.playButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t.pauseButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t\n\t\tinput[type=range] {\n\t\t\t-webkit-appearance: none;\n\t\t\tappearance: none;\n\t\t\theight: 16px;\n\t\t\tmargin: 0;\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: ${t.ColorConfig.editorBackground};\n\t\t\ttouch-action: pan-y;\n\t\t}\n\t\tinput[type=range]:focus {\n\t\t\toutline: none;\n\t\t}\n\t\tinput[type=range]::-webkit-slider-runnable-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]::-webkit-slider-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t\t-webkit-appearance: none;\n\t\t\tmargin-top: -6px;\n\t\t}\n\t\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tborder: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t\tinput[type=range]::-ms-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t\tborder-color: transparent;\n\t\t}\n\t\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-ms-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t`)),t.ColorConfig.setTheme("jummbox classic");let c,m=null,d=(4294967295*Math.random()>>>0).toString(16),p=!1,u=!1,f=1;const y=new t.Synth;let b=i({style:"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;"},""),g=e({target:"_top",style:"margin: 0 4px;"},"✎ Edit"),v=e({href:"javascript:void(0)",style:"margin: 0 4px;"},"⎘ Copy URL"),k=e({href:"javascript:void(0)",style:"margin: 0 4px;"},"⤳ Share"),w=e({target:"_top",style:"margin: 0 4px;"},"⇱ Fullscreen"),M=!1;const x=n({style:"width: 100%; height: 100%; max-height: 50px;"}),C=s({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},x),S=l({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),F=n({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},o({width:12,height:12,viewBox:"0 0 12 12"},S)),B=o({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},l({fill:t.ColorConfig.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),D=a({title:"volume",type:"range",value:75,min:0,max:75,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),E=o({width:12,height:12,viewBox:"0 0 12 12"},r({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),l({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),P=n({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},E),A=o({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),N=s({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${t.ColorConfig.playhead}; pointer-events: none;`}),T=s({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},A,N),O=s({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},T);function L(){let t=location.hash;if(m!=t&&""!=t){m=t,"#"==t.charAt(0)&&(t=t.substring(1)),w.setAttribute("href",location.href);for(const e of t.split("&")){let n=e.indexOf("=");if(-1!=n){let t=e.substring(0,n),s=e.substring(n+1);switch(t){case"song":y.setSong(s),y.snapToStart(),y.song&&(b.textContent=y.song.title),g.setAttribute("href","../#"+s);break;case"loop":y.loopRepeatCount="1"!=s?0:-1,_()}}else y.setSong(t),y.snapToStart(),g.setAttribute("href","../#"+t)}K()}}function I(){y.playing&&(c=requestAnimationFrame(I),localStorage.getItem("playerId")!=d&&z(),j()),p!=y.playing&&Q()}function z(){null!=y.song&&(null!=c&&cancelAnimationFrame(c),c=null,y.playing?y.pause():(y.play(),localStorage.setItem("playerId",d),I())),Q()}function R(t){t.preventDefault(),U(t.clientX||t.pageX)}function V(t){U(t.touches[0].clientX)}function U(t){if(M&&null!=y.song){const e=O.getBoundingClientRect();y.playhead=y.song.barCount*(t-e.left)/(e.right-e.left),y.computeLatestModValues(),j()}}function W(){M=!1}function $(){const t=+D.value;y.volume=Math.min(1,Math.pow(t/50,.5))*Math.pow(2,(t-75)/25)}function j(){if(null!=y.song){let t=y.playhead/y.song.barCount;N.style.left=f*t+"px";const e=O.getBoundingClientRect();O.scrollLeft=t*(f-e.width)}}function K(){if(A.innerHTML="",null==y.song)return;const e=O.getBoundingClientRect();let n,s,i;if(u){const a=((n=e.height)-1)/(i=12*(s=Math.max(3,Math.min(t.Config.pitchOctaves,Math.round(n/24))))+1),o=Math.max(8,4*a);f=Math.max(e.width,o*y.song.barCount*y.song.beatsPerBar)}else{f=e.width;const a=Math.max(1,f/(y.song.barCount*y.song.beatsPerBar)/6);n=Math.min(e.height,a*(t.Config.maxPitch+1)+1),i=12*(s=Math.max(3,Math.min(t.Config.pitchOctaves,Math.round(n/(12*a)))))+1}T.style.width=f+"px",T.style.height=n+"px",A.style.width=f+"px",A.style.height=n+"px";const a=f/y.song.barCount,o=a/(y.song.beatsPerBar*t.Config.partsPerBeat),r=(n-1)/i,c=(n-1)/t.Config.drumCount;for(let e=0;e<y.song.barCount+1;e++){const s=e==y.song.loopStart||e==y.song.loopStart+y.song.loopLength?t.ColorConfig.loopAccent:t.ColorConfig.uiWidgetBackground;A.appendChild(h({x:e*a-1,y:0,width:2,height:n,fill:s}))}for(let e=0;e<=s;e++)A.appendChild(h({x:0,y:12*e*r,width:f,height:r+1,fill:t.ColorConfig.tonic,opacity:.75}));for(let e=y.song.channels.length-1-y.song.modChannelCount;e>=0;e--){const i=y.song.getChannelIsNoise(e),h=i?c:r,m=y.song.channels[e].octave,d=(s-3)/2,p=t.Config.pitchOctaves-s,u=p/2;let f=m-2.5;Math.abs(f)<=d?f=0:f<0?f+=d:f-=d;const b=Math.max(0,Math.min(p,Math.round(u+f)))*h*12+n-.5*h-.5;for(let n=0;n<y.song.barCount;n++){const s=y.song.getPattern(e,n);if(null==s)continue;const r=n*a;for(let n=0;n<s.notes.length;n++){const a=s.notes[n];for(const n of a.pitches){const s=G(n,a.start,a.pins,(h+1)/2,r,b,o,h),c=l({d:s,fill:t.ColorConfig.getChannelColor(y.song,e).primaryChannel});i&&(c.style.opacity=String(.6)),A.appendChild(c)}}}}j()}function G(t,e,n,s,i,a,o,r){let h=`M ${i+o*(e+n[0].time)} ${a-t*r+s*(n[0].volume/6)} `;for(let l=0;l<n.length;l++){const c=n[l];h+=`L ${i+o*(e+c.time)} ${a-r*(t+c.interval)-s*(c.volume/6)} `}for(let l=n.length-1;l>=0;l--){const c=n[l];h+=`L ${i+o*(e+c.time)} ${a-r*(t+c.interval)+s*(c.volume/6)} `}return h}function Q(){y.playing?(x.classList.remove("playButton"),x.classList.add("pauseButton"),x.title="Pause (Space)",x.innerText="Pause"):(x.classList.remove("pauseButton"),x.classList.add("playButton"),x.title="Play (Space)",x.innerText="Play"),p=y.playing}function _(){S.setAttribute("fill",-1==y.loopRepeatCount?t.ColorConfig.linkAccent:t.ColorConfig.uiWidgetBackground)}function q(){E.style.color=u?t.ColorConfig.linkAccent:t.ColorConfig.uiWidgetBackground}document.body.appendChild(O),document.body.appendChild(s({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},C,F,B,D,P,b,g,v,k,w)),top!==self?(v.style.display="none",k.style.display="none"):(w.style.display="none","share"in navigator||(k.style.display="none")),null!=localStorage.getItem("volume")&&(D.value=localStorage.getItem("volume")),$(),window.addEventListener("resize",function(){K()}),window.addEventListener("keydown",function(t){switch(t.keyCode){case 32:z(),t.preventDefault();break;case 219:y.prevBar(),j(),t.preventDefault();break;case 221:y.nextBar(),j(),t.preventDefault()}}),A.addEventListener("mousedown",function(t){M=!0,R(t)}),window.addEventListener("mousemove",R),window.addEventListener("mouseup",W),A.addEventListener("touchstart",function(t){M=!0,V(t)}),A.addEventListener("touchmove",V),A.addEventListener("touchend",W),A.addEventListener("touchcancel",W),x.addEventListener("click",z),F.addEventListener("click",function(){-1==y.loopRepeatCount?y.loopRepeatCount=0:y.loopRepeatCount=-1,_()}),D.addEventListener("input",function(){localStorage.setItem("volume",D.value),$()}),P.addEventListener("click",function(){u=!u,q(),K()}),v.addEventListener("click",function(){let t;if((t=navigator).clipboard&&t.clipboard.writeText)return void t.clipboard.writeText(location.href).catch(()=>{window.prompt("Copy to clipboard:",location.href)});const e=document.createElement("textarea");e.innerText=location.href,document.body.appendChild(e),e.select();const n=document.execCommand("copy");e.remove(),n||window.prompt("Copy this:",location.href)}),k.addEventListener("click",function(){navigator.share({url:location.href})}),window.addEventListener("hashchange",L),L(),_(),q(),Q()}(beepbox||(beepbox={}));